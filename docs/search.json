[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 unhcrdatapackage authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"/articles/chart-library-country.html","id":"key-figures","dir":"Articles","previous_headings":"1. Category","what":"Key Figures","title":"Chart Library Country","text":"","code":"plot_ctr_keyfig(year = 2022,                 country_asylum_iso3c = \"COL\")"},{"path":"/articles/chart-library-country.html","id":"plot-tree-map-of-categories","dir":"Articles","previous_headings":"1. Category","what":"Plot Tree Map of Categories","title":"Chart Library Country","text":"","code":"#  plot_ctr_treemap(year = 2021,                             country_asylum_iso3c = \"USA\",                             pop_type = c(\"REF\", \"ASY\")          )"},{"path":"/articles/chart-library-country.html","id":"plot-population-type-over-year","dir":"Articles","previous_headings":"1. Category","what":"Plot Population Type Over Year","title":"Chart Library Country","text":"","code":"p <- plot_ctr_population_type_per_year(                          year = 2022,                          country_asylum_iso3c = \"PAN\",                          lag = 5,                          pop_type = c(\"REF\",                                         \"ASY\",                                         \"OIP\",                                         \"OOC\",                                        \"STA\",                                        \"IDP\" )                   ) p ## Raw data can always be accessed with  #knitr::kable(ggplot2::ggplot_build(p)$plot$data )"},{"path":[]},{"path":"/articles/chart-library-country.html","id":"plot-main-country-of-origin-in-one-specific-country---absolute-value","dir":"Articles","previous_headings":"2. Origin","what":"Plot Main country of origin in one specific country - Absolute value","title":"Chart Library Country","text":"","code":"plot_ctr_population_type_abs(year = 2020,                     country_asylum_iso3c = \"USA\",                     top_n_countries = 4,                     pop_type = \"REF\",                     show_diff_label = FALSE                     )  #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `origin_data_prot = forcats::fct_explicit_na(origin_data_prot, #>   \"Other nationalities\")`. #> Caused by warning: #> ! `fct_explicit_na()` was deprecated in forcats 1.0.0. #> ℹ Please use `fct_na_value_to_level()` instead. #> ℹ The deprecated feature was likely used in the unhcrdatapackage package. #>   Please report the issue at #>   <https://github.com/edouard-legoupil/unhcrdatapackage/issues>. ## Same with 9 top countries and Asylum-seekers included plot_ctr_population_type_abs(year = 2020,                     country_asylum_iso3c = \"USA\",                     top_n_countries = 9,                     pop_type = \"ASY\",                     show_diff_label = TRUE                     )"},{"path":"/articles/chart-library-country.html","id":"plot-main-country-of-origin-in-one-specific-country---percentage","dir":"Articles","previous_headings":"2. Origin","what":"Plot Main country of origin in one specific country - Percentage","title":"Chart Library Country","text":"","code":"plot_ctr_population_type_perc(year = 2021,                     country_asylum_iso3c = \"BRA\",                     top_n_countries = 9,                     pop_type = \"REF\"  ) plot_ctr_population_type_perc(year = 2021,                     country_asylum_iso3c = \"BRA\",                     top_n_countries = 9,                     pop_type = \"ASY\"  )"},{"path":"/articles/chart-library-country.html","id":"plot-increases-and-decreases-in-population-groups","dir":"Articles","previous_headings":"2. Origin","what":"Plot Increases and Decreases in Population Groups","title":"Chart Library Country","text":"","code":"#  plot_ctr_diff_in_pop_groups(year = 2022,                             country_asylum_iso3c = \"ROU\",                             pop_type = c(\"REF\", \"ASY\")          ) #> Warning: Returning more (or less) than 1 row per `summarise()` group was deprecated in #> dplyr 1.1.0. #> ℹ Please use `reframe()` instead. #> ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` #>   always returns an ungrouped data frame and adjust accordingly. #> ℹ The deprecated feature was likely used in the unhcrdatapackage package. #>   Please report the issue at #>   <https://github.com/edouard-legoupil/unhcrdatapackage/issues>. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"/articles/chart-library-country.html","id":"plot-origin-history","dir":"Articles","previous_headings":"2. Origin","what":"Plot Origin History","title":"Chart Library Country","text":"","code":"plot_ctr_origin_history(year = 2022,                         lag = 5,                         country_asylum_iso3c = \"MEX\",                           pop_type = c(\"REF\",                                         \"ASY\",                                         \"OIP\",                                         \"IDP\" ),                         otherprop = .02)"},{"path":[]},{"path":"/articles/chart-library-country.html","id":"plot-main-destination-from-one-specific-country","dir":"Articles","previous_headings":"3. Destination","what":"Plot Main Destination from one specific country","title":"Chart Library Country","text":"","code":"#  plot_ctr_destination(year = 2021,                      country_origin_iso3c = \"COL\",                      pop_type = c(\"REF\", \"ASY\")          )"},{"path":"/articles/chart-library-country.html","id":"plot-recognition-rate-for-a-nationality","dir":"Articles","previous_headings":"3. Destination","what":"plot recognition rate for a nationality","title":"Chart Library Country","text":"","code":"plot_ctr_origin_recognition(year = 2022,                      country_origin_iso3c = \"VEN\",                      top_n_countries = 10,                       measure = \"RefugeeRecognitionRate\",                      order_by = \"TotalDecided\" )"},{"path":[]},{"path":"/articles/chart-library-country.html","id":"plot-age-pyramid","dir":"Articles","previous_headings":"4. Profile","what":"Plot Age Pyramid","title":"Chart Library Country","text":"","code":"#  plot_ctr_pyramid(year = 2022,                  country_asylum_iso3c = \"COL\",                  pop_type = c(\"ASY\", \"REF\")                  )"},{"path":"/articles/chart-library-country.html","id":"plot-locations-within-countries","dir":"Articles","previous_headings":"4. Profile","what":"Plot locations within countries","title":"Chart Library Country","text":"","code":"# plot_ctr_location(year = 2022, #                  country_asylum_iso3c = \"COL\", #                  pop_type = c(\"ASY\", \"REF\", \"OIP\")) #  # plot_ctr_location(year = 2021, #                  country_asylum_iso3c = \"COL\", #                  pop_type = c(\"IDP\")) #  # plot_ctr_location(year = 2022, #                  country_asylum_iso3c = \"CAN\", #                  pop_type = c(\"ASY\", \"REF\", \"OIP\")) #  # plot_ctr_location(year = 2021, #                  country_asylum_iso3c = \"MEX\", #                  pop_type = c(\"ASY\", \"REF\", \"OIP\"))"},{"path":[]},{"path":"/articles/chart-library-country.html","id":"plot-refugee-recognition-rate-in-country","dir":"Articles","previous_headings":"5. Processing","what":"Plot Refugee Recognition rate in Country","title":"Chart Library Country","text":"","code":"plot_ctr_recognition(year = 2022,                      country_asylum_iso3c = \"USA\",                      top_n_countries = 10,                       measure = \"RefugeeRecognitionRate\",                      order_by = \"TotalDecided\" )"},{"path":"/articles/chart-library-country.html","id":"asylum-applications-decision-over-time","dir":"Articles","previous_headings":"5. Processing","what":"Asylum Applications & Decision over time","title":"Chart Library Country","text":"","code":"plot_ctr_asylum(year = 2022,                 country_asylum_iso3c = \"ECU\",                              lag = 10) #> Joining with `by = join_by(Year, CountryAsylumCode)`"},{"path":"/articles/chart-library-country.html","id":"asylum-processing","dir":"Articles","previous_headings":"5. Processing","what":"Asylum Processing","title":"Chart Library Country","text":"","code":"plot_ctr_process(year = 2022,   country_asylum_iso3c = \"BOL\") plot_ctr_process(year = 2022,   country_asylum_iso3c = \"CHL\") plot_ctr_process(year = 2022,   country_asylum_iso3c = \"USA\",                               otherprop = .02) plot_ctr_process(year = 2022,   country_asylum_iso3c = \"USA\",                               otherprop = .04)"},{"path":"/articles/chart-library-country.html","id":"average-asylum-processing-time","dir":"Articles","previous_headings":"5. Processing","what":"Average Asylum Processing Time","title":"Chart Library Country","text":"","code":"plot_ctr_processing_time(year = 2022,                          country_asylum_iso3c = \"ARG\") #> Joining with `by = join_by(Year, CountryAsylumCode)` plot_ctr_processing_time(year = 2022,                          country_asylum_iso3c = \"USA\") #> Joining with `by = join_by(Year, CountryAsylumCode)` ## Display a filtered version of the chart for a specific country and procedure plot_ctr_processing_time(year = 2022,                          country_asylum_iso3c = \"EGY\",                          country_origin_iso3c = \"ERI\",                          procedureType = \"U\") #> Joining with `by = join_by(Year, CountryAsylumCode)`"},{"path":[]},{"path":"/articles/chart-library-country.html","id":"plot-solution-over-time","dir":"Articles","previous_headings":"6. Solutions","what":"Plot Solution Over time","title":"Chart Library Country","text":"","code":"plot_ctr_solution(year = 2021,                   country_asylum_iso3c= \"UGA\",                   lag = 10,                   sol_type = c(\"NAT\", \"RST\", \"RET\", \"RDP\"))"},{"path":"/articles/chart-library-country.html","id":"plot-solution-over-recognition","dir":"Articles","previous_headings":"6. Solutions","what":"Plot Solution Over Recognition","title":"Chart Library Country","text":"","code":"plot_ctr_solution_recognition(year = 2022,                   country_asylum_iso3c= \"UGA\",                   lag = 10) #> `geom_braid()` using method = 'line'"},{"path":[]},{"path":"/articles/chart-library-country.html","id":"plot-share-displaced-migrant-for-world---region---subregion","dir":"Articles","previous_headings":"7.Migrant","what":"plot share displaced / migrant for world - region - subregion","title":"Chart Library Country","text":"bar share","code":""},{"path":"/articles/chart-library-country.html","id":"plot-share-displaced-migrant-for-top-countries","dir":"Articles","previous_headings":"7.Migrant","what":"Plot share displaced / migrant for top countries","title":"Chart Library Country","text":"dumbel","code":""},{"path":"/articles/chart-library-country.html","id":"plot-ratio-refugee-migrant","dir":"Articles","previous_headings":"7.Migrant","what":"Plot Ratio Refugee Migrant","title":"Chart Library Country","text":"","code":"plot_ctr_disp_migrant(year = 2022,                     country_asylum_iso3c = \"MEX\" ,                     top_n_countries = 10) # plot_ctr_disp_migrant(year = 2022, #                     country_asylum_iso3c = \"FRA\" )"},{"path":[]},{"path":"/articles/chart-library-region.html","id":"population-group-in-the-region","dir":"Articles","previous_headings":"","what":"Population group in the region","title":"Chart Library Region","text":"","code":"plot_reg_treemap(year = 2022,  region = \"Americas\")"},{"path":"/articles/chart-library-region.html","id":"plot-world-comparison","dir":"Articles","previous_headings":"","what":"Plot World Comparison","title":"Chart Library Region","text":"","code":"plot_reg_share(year = 2022,                                region = \"Americas\",                              pop_type = \"REF\") #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. #> Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. plot_reg_share(year = 2022,                                region = \"Americas\",                              pop_type = \"ASY\") #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. #> Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. plot_reg_share(year = 2022,                                region = \"Americas\",                              pop_type = \"OIP\") #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. #> Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. plot_reg_share(year = 2022,                                region = \"Americas\",                              pop_type = \"IDP\") #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. #> Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. plot_reg_share(year = 2022,                                region = \"Americas\",                              pop_type = \"STA\") #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. #> Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead."},{"path":"/articles/chart-library-region.html","id":"evolution-over-time","dir":"Articles","previous_headings":"","what":"Evolution Over Time","title":"Chart Library Region","text":"","code":"plot_reg_evolution(year = 2021,                    lag = 5,                    region = \"Asia\",                    pop_type =  c( \"REF\", \"IDP\", \"ASY\", \"OOC\", \"STA\", \"OIP\"))"},{"path":"/articles/chart-library-region.html","id":"plot-evolution-of-population-type-per-year","dir":"Articles","previous_headings":"","what":"Plot Evolution of Population type per year","title":"Chart Library Region","text":"","code":"plot_reg_population_type_per_year(year = 2022,                                               lag = 5,                                      region  = \"Americas\",                                      pop_type =   c(\"REF\", \"ASY\", \"IDP\", \"OIP\", \"STA\", \"OOC\") ) #> Warning: The dot-dot notation (`..y..`) was deprecated in ggplot2 3.4.0. #> ℹ Please use `after_stat(y)` instead. #> ℹ The deprecated feature was likely used in the unhcrdatapackage package. #>   Please report the issue at #>   <https://github.com/edouard-legoupil/unhcrdatapackage/issues>. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"/articles/chart-library-region.html","id":"plot-population-origin-destination-within-the-region","dir":"Articles","previous_headings":"","what":"Plot Population Origin-Destination within the region","title":"Chart Library Region","text":"","code":"plot_reg_origin_dest(year = 2022,  region = \"Asia\")"},{"path":"/articles/chart-library-region.html","id":"plot-main-country-of-asylum-in-the-region","dir":"Articles","previous_headings":"","what":"Plot Main country of Asylum in the Region","title":"Chart Library Region","text":"","code":"plot_reg_population_type_abs(year = 2022,                               region = \"Americas\",                               top_n_countries = 5,                               pop_type = \"REF\",                               show_diff_label = TRUE                               ) plot_reg_population_type_abs(year = 2022,                               region = \"Americas\",                               top_n_countries = 5,                               pop_type = \"ASY\",                               show_diff_label = FALSE                               )"},{"path":"/articles/chart-library-region.html","id":"plot-biggest-decrease-in-refugee-population","dir":"Articles","previous_headings":"","what":"Plot Biggest decrease in Refugee Population","title":"Chart Library Region","text":"","code":"plot_reg_decrease(year = 2021,                   lag = 5,                   topn = 5,                   region = \"Americas\",                   pop_type = c(\"REF\", \"ASY\", \"OIP\"))"},{"path":"/articles/chart-library-region.html","id":"plot-biggest-increase-in-refugee-population","dir":"Articles","previous_headings":"","what":"Plot Biggest increase in Refugee Population","title":"Chart Library Region","text":"","code":"plot_reg_increase(year = 2021,                   lag = 5,                   topn = 5,                   region = \"Americas\",                   pop_type = c(\"REF\", \"ASY\", \"OIP\")) plot_reg_increase(year = 2021,                   lag = 5,                   topn = 5,                   region = \"Asia\",                   pop_type = c(\"REF\", \"ASY\", \"OIP\"))"},{"path":"/articles/chart-library-region.html","id":"proportion-of-the-population-who-are-refugees-by-country-of-origin-sdg-indicator-10-7-4","dir":"Articles","previous_headings":"","what":"Proportion of the population who are refugees, by country of origin (SDG indicator 10.7.4 )","title":"Chart Library Region","text":"","code":"plot_reg_prop_origin(year = 2022,  region = \"Americas\")"},{"path":"/articles/chart-library-region.html","id":"decision-on-refugee-status-determination","dir":"Articles","previous_headings":"","what":"Decision on Refugee Status Determination","title":"Chart Library Region","text":"","code":"plot_reg_rsd(year = 2022,              region = \"Americas\" ,                         top_n_countries = 10,                          measure = \"Recognized\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. plot_reg_rsd(year = 2022,              region = \"Americas\" ,                         top_n_countries = 5,                          measure = \"ComplementaryProtection\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. plot_reg_rsd(year = 2022,              region = \"Americas\" ,                         top_n_countries = 10,                          measure = \"TotalDecided\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. plot_reg_rsd(year = 2022,              region = \"Americas\" ,                         top_n_countries = 10,                          measure = \"RefugeeRecognitionRate\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. plot_reg_rsd(year = 2022,              region = \"Americas\" ,                         top_n_countries = 10,                          measure = \"TotalRecognitionRate\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. # plot_reg_rsd(year = 2022, #              region = \"Europe\",  #                         top_n_countries = 10,  #                         measure = \"Recognized\")"},{"path":"/articles/chart-library-region.html","id":"plot-evolution-of-solutions-in-the-region","dir":"Articles","previous_headings":"","what":"Plot Evolution of Solutions in the Region","title":"Chart Library Region","text":"","code":"plot_reg_solution(year = 2022,                              region = \"Americas\",                             lag = 10) #> `geom_smooth()` using formula = 'y ~ x' #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : span too small.  fewer data values than degrees of freedom. #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : pseudoinverse used at 2012 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : neighborhood radius 1.05 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : reciprocal condition number 0 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : There are other near singularities as well. 1.1025 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : span too small.  fewer data values than degrees of freedom. #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : pseudoinverse used at 2012 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : neighborhood radius 1.05 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : reciprocal condition number 0 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : There are other near singularities as well. 1.1025 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : span too small.  fewer data values than degrees of freedom. #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : pseudoinverse used at 2012 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : neighborhood radius 1.05 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : reciprocal condition number 0 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : There are other near singularities as well. 1.1025"},{"path":"/articles/chart-library-region.html","id":"mapping-population","dir":"Articles","previous_headings":"","what":"Mapping Population","title":"Chart Library Region","text":"","code":"plot_reg_map(  year = 2022,                             region = \"Asia\",                             topn = 5,                             pop_type =  c(\"REF\", \"ASY\", \"OIP\"),                             projection = \"Mercator\",                             maxSymbolsize = .25) #> Warning in CPL_crs_from_input(x): GDAL Message 1: +init=epsg:XXXX syntax is #> deprecated. It might return a CRS with a non-EPSG compliant axis order. # plot_reg_map(  year = 2022, #                             region = \"WestAfrica\", #                             topn = 5, #                             pop_type =  c(\"REF\", \"ASY\", \"OIP\"), #                             projection = \"Mercator\", #                             maxSymbolsize = .25)"},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/chart-library.html","id":"key-figures","dir":"Articles","previous_headings":"Population Data","what":"Key Figures","title":"Chart Library","text":"","code":"plot_ctr_keyfig(year = 2022,                 country_asylum_iso3c = \"COL\")"},{"path":"/articles/chart-library.html","id":"plot-tree-map-of-categories","dir":"Articles","previous_headings":"Population Data","what":"Plot Tree Map of Categories","title":"Chart Library","text":"","code":"#  plot_ctr_treemap(year = 2021,                             country_asylum_iso3c = \"USA\",                             pop_type = c(\"REF\", \"ASY\")          )"},{"path":"/articles/chart-library.html","id":"plot-population-type-per-year","dir":"Articles","previous_headings":"Population Data","what":"Plot Population type per year","title":"Chart Library","text":"","code":"p <- plot_ctr_population_type_per_year(                          year = 2022,                          lag = 5,                          country_asylum_iso3c = \"PAN\",                          pop_type = c(\"REF\",                                         \"ASY\",                                         \"OIP\",                                         \"OOC\",                                        \"STA\",                                        \"IDP\" )                   ) p ## Raw data can always be accessed with  #knitr::kable(ggplot2::ggplot_build(p)$plot$data )"},{"path":"/articles/chart-library.html","id":"plot-main-country-of-origin-in-one-specific-country---absolute-value","dir":"Articles","previous_headings":"Population Data","what":"Plot Main country of origin in one specific country - Absolute value","title":"Chart Library","text":"","code":"plot_ctr_population_type_abs(year = 2020,                     country_asylum_iso3c = \"USA\",                     top_n_countries = 4,                     pop_type = \"REF\",                     show_diff_label = FALSE                     )  #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `origin_data_prot = forcats::fct_explicit_na(origin_data_prot, #>   \"Other nationalities\")`. #> Caused by warning: #> ! `fct_explicit_na()` was deprecated in forcats 1.0.0. #> ℹ Please use `fct_na_value_to_level()` instead. #> ℹ The deprecated feature was likely used in the unhcrdatapackage package. #>   Please report the issue at #>   <https://github.com/edouard-legoupil/unhcrdatapackage/issues>. ## Same with 9 top countries and asylum seekers included plot_ctr_population_type_abs(year = 2020,                     country_asylum_iso3c = \"USA\",                     top_n_countries = 9,                     pop_type = \"ASY\",                     show_diff_label = TRUE                     )"},{"path":"/articles/chart-library.html","id":"plot-main-country-of-origin-in-one-specific-country---percentage","dir":"Articles","previous_headings":"Population Data","what":"Plot Main country of origin in one specific country - Percentage","title":"Chart Library","text":"","code":"plot_ctr_population_type_perc(year = 2021,                     country_asylum_iso3c = \"BRA\",                     top_n_countries = 9,                     pop_type = \"REF\"  ) plot_ctr_population_type_perc(year = 2021,                     country_asylum_iso3c = \"BRA\",                     top_n_countries = 9,                     pop_type = \"ASY\"  )"},{"path":"/articles/chart-library.html","id":"plot-increases-and-decreases-in-population-groups","dir":"Articles","previous_headings":"Population Data","what":"Plot Increases and Decreases in Population Groups","title":"Chart Library","text":"","code":"#  plot_ctr_diff_in_pop_groups(year = 2022,                             country_asylum_iso3c = \"ARG\",                             pop_type = c(\"REF\", \"ASY\")          ) #> Warning: Returning more (or less) than 1 row per `summarise()` group was deprecated in #> dplyr 1.1.0. #> ℹ Please use `reframe()` instead. #> ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` #>   always returns an ungrouped data frame and adjust accordingly. #> ℹ The deprecated feature was likely used in the unhcrdatapackage package. #>   Please report the issue at #>   <https://github.com/edouard-legoupil/unhcrdatapackage/issues>. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"/articles/chart-library.html","id":"plot-origin-history","dir":"Articles","previous_headings":"Population Data","what":"Plot Origin History","title":"Chart Library","text":"","code":"plot_ctr_origin_history(year = 2022,                         lag = 5,                         country_asylum_iso3c = \"MEX\",                           pop_type = c(\"REF\",                                         \"ASY\",                                         \"OIP\",                                         \"IDP\" ),                         otherprop = .02)"},{"path":"/articles/chart-library.html","id":"plot-age-pyramid","dir":"Articles","previous_headings":"Population Data","what":"Plot Age Pyramid","title":"Chart Library","text":"","code":"#  plot_ctr_pyramid(year = 2022,                  country_asylum_iso3c = \"COL\",                  pop_type = c(\"ASY\", \"REF\")                  )"},{"path":[]},{"path":"/articles/chart-library.html","id":"plot-locations-within-countries","dir":"Articles","previous_headings":"Maps","what":"Plot locations within countries","title":"Chart Library","text":"","code":"plot_ctr_location(year = 2022,                  country_asylum_iso3c = \"COL\",                  pop_type = c(\"ASY\", \"REF\", \"OIP\")) #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one. plot_ctr_location(year = 2021,                  country_asylum_iso3c = \"COL\",                  pop_type = c(\"IDP\")) #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one. plot_ctr_location(year = 2022,                  country_asylum_iso3c = \"CAN\",                  pop_type = c(\"ASY\", \"REF\", \"OIP\")) #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one. plot_ctr_location(year = 2021,                  country_asylum_iso3c = \"MEX\",                  pop_type = c(\"ASY\", \"REF\", \"OIP\")) #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one."},{"path":[]},{"path":"/articles/chart-library.html","id":"plot-refugee-recognition-rate-in-country","dir":"Articles","previous_headings":"Refugee Status Determination","what":"Plot Refugee Recognition rate in Country","title":"Chart Library","text":"","code":"plot_ctr_recognition(year = 2022,                      country_asylum_iso3c = \"USA\",                      top_n_countries = 10,                       measure = \"RefugeeRecognitionRate\",                      order_by = \"TotalDecided\" )"},{"path":"/articles/chart-library.html","id":"asylum-applications-decision-over-time","dir":"Articles","previous_headings":"Refugee Status Determination","what":"Asylum Applications & Decision over time","title":"Chart Library","text":"","code":"plot_ctr_asylum(year = 2022,                 country_asylum_iso3c = \"ECU\",                              lag = 10) #> Joining with `by = join_by(Year, CountryAsylumCode)`"},{"path":"/articles/chart-library.html","id":"asylum-processing","dir":"Articles","previous_headings":"Refugee Status Determination","what":"Asylum Processing","title":"Chart Library","text":"","code":"plot_ctr_process(year = 2022,   country_asylum_iso3c = \"BOL\") plot_ctr_process(year = 2022,   country_asylum_iso3c = \"CHL\") plot_ctr_process(year = 2022,   country_asylum_iso3c = \"USA\",                               otherprop = .02) plot_ctr_process(year = 2022,   country_asylum_iso3c = \"USA\",                               otherprop = .04)"},{"path":"/articles/chart-library.html","id":"average-asylum-processing-time","dir":"Articles","previous_headings":"Refugee Status Determination","what":"Average Asylum Processing Time","title":"Chart Library","text":"","code":"plot_ctr_processing_time(year = 2022,                          country_asylum_iso3c = \"ARG\") #> Joining with `by = join_by(Year, CountryAsylumCode)` plot_ctr_processing_time(year = 2022,                          country_asylum_iso3c = \"USA\") #> Joining with `by = join_by(Year, CountryAsylumCode)` ## Display a filtered version of the chart for a specific country and procedure plot_ctr_processing_time(year = 2022,                          country_asylum_iso3c = \"EGY\",                          country_origin_iso3c = \"ERI\",                          procedureType = \"U\") #> Joining with `by = join_by(Year, CountryAsylumCode)`"},{"path":[]},{"path":"/articles/chart-library.html","id":"plot-solution-over-time","dir":"Articles","previous_headings":"Solutions","what":"Plot Solution Over time","title":"Chart Library","text":"","code":"plot_ctr_solution(year = 2021,                   country_asylum_iso3c= \"UGA\",                   pop_type = c(\"REF\", \"ASY\")) #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `valabel = ifelse(...)`. #> ℹ In group 1: `Year = 2012`. #> Caused by warning: #> ! `label_number_si()` was deprecated in scales 1.2.0. #> ℹ Please use the `scale_cut` argument of `label_number()` instead. #> ℹ The deprecated feature was likely used in the unhcrdatapackage package. #>   Please report the issue at #>   <https://github.com/edouard-legoupil/unhcrdatapackage/issues>."},{"path":[]},{"path":"/articles/chart-library.html","id":"plot-main-destination-from-one-specific-country","dir":"Articles","previous_headings":"Forced Displacement and Migration","what":"Plot Main Destination from one specific country","title":"Chart Library","text":"","code":"#  plot_ctr_destination(year = 2021,                      country_origin_iso3c = \"COL\",                      pop_type = c(\"REF\", \"ASY\")          )"},{"path":"/articles/chart-library.html","id":"plot-recognition-rate-for-a-nationality","dir":"Articles","previous_headings":"Forced Displacement and Migration","what":"plot recognition rate for a nationality","title":"Chart Library","text":"","code":"plot_ctr_origin_recognition(year = 2022,                      country_origin_iso3c = \"VEN\",                      top_n_countries = 10,                       measure = \"RefugeeRecognitionRate\",                      order_by = \"TotalDecided\" )"},{"path":"/articles/chart-library.html","id":"plot-share-displaced-migrant-for-world---region---subregion","dir":"Articles","previous_headings":"Forced Displacement and Migration","what":"plot share displaced / migrant for world - region - subregion","title":"Chart Library","text":"bar share","code":""},{"path":"/articles/chart-library.html","id":"plot-share-displaced-migrant-for-top-countries","dir":"Articles","previous_headings":"Forced Displacement and Migration","what":"Plot share displaced / migrant for top countries","title":"Chart Library","text":"dumbel","code":""},{"path":"/articles/chart-library.html","id":"plot-ratio-refugee-migrant","dir":"Articles","previous_headings":"Forced Displacement and Migration","what":"Plot Ratio Refugee Migrant","title":"Chart Library","text":"","code":"plot_ctr_disp_migrant(year = 2022,                     country_asylum_iso3c = \"MEX\" ) # plot_ctr_disp_migrant(year = 2022, #                     country_asylum_iso3c = \"FRA\" )"},{"path":[]},{"path":"/articles/chart-library.html","id":"population-group-in-the-region","dir":"Articles","previous_headings":"Regional Questions","what":"Population group in the region","title":"Chart Library","text":"","code":"plot_reg_treemap(year = 2022,  region = \"Americas\")"},{"path":"/articles/chart-library.html","id":"plot-world-comparison","dir":"Articles","previous_headings":"Regional Questions","what":"Plot World Comparison","title":"Chart Library","text":"","code":"plot_reg_share(year = 2022,                                region = \"Americas\",                              pop_type = \"REF\") #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. #> Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. plot_reg_share(year = 2022,                                region = \"Americas\",                              pop_type = \"ASY\") #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. #> Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. plot_reg_share(year = 2022,                                region = \"Americas\",                              pop_type = \"OIP\") #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. #> Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. plot_reg_share(year = 2022,                                region = \"Americas\",                              pop_type = \"IDP\") #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. #> Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. plot_reg_share(year = 2022,                                region = \"Americas\",                              pop_type = \"STA\") #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. #> Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead."},{"path":"/articles/chart-library.html","id":"evolution-over-time","dir":"Articles","previous_headings":"Regional Questions","what":"Evolution Over Time","title":"Chart Library","text":"","code":"plot_reg_evolution(year = 2021,                    lag = 5,                    region = \"Asia\",                    pop_type =  c( \"REF\", \"IDP\", \"ASY\", \"OOC\", \"STA\", \"OIP\"))"},{"path":"/articles/chart-library.html","id":"plot-evolution-of-population-type-per-year","dir":"Articles","previous_headings":"Regional Questions","what":"Plot Evolution of Population type per year","title":"Chart Library","text":"","code":"plot_reg_population_type_per_year(year = 2022,                                               lag = 5,                                      region  = \"Americas\",                                      pop_type =   c(\"REF\", \"ASY\", \"IDP\", \"OIP\", \"STA\", \"OOC\") ) #> Warning: The dot-dot notation (`..y..`) was deprecated in ggplot2 3.4.0. #> ℹ Please use `after_stat(y)` instead. #> ℹ The deprecated feature was likely used in the unhcrdatapackage package. #>   Please report the issue at #>   <https://github.com/edouard-legoupil/unhcrdatapackage/issues>. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"/articles/chart-library.html","id":"plot-population-origin-destination-within-the-region","dir":"Articles","previous_headings":"Regional Questions","what":"Plot Population Origin-Destination within the region","title":"Chart Library","text":"","code":"plot_reg_origin_dest(year = 2022,  region = \"Asia\")"},{"path":"/articles/chart-library.html","id":"plot-main-country-of-asylum-in-the-region","dir":"Articles","previous_headings":"Regional Questions","what":"Plot Main country of Asylum in the Region","title":"Chart Library","text":"","code":"plot_reg_population_type_abs(year = 2022,                               region = \"Americas\",                               top_n_countries = 5,                               pop_type = \"REF\",                               show_diff_label = TRUE                               ) plot_reg_population_type_abs(year = 2022,                               region = \"Americas\",                               top_n_countries = 5,                               pop_type = \"ASY\",                               show_diff_label = FALSE                               )"},{"path":"/articles/chart-library.html","id":"plot-biggest-decrease-in-refugee-population","dir":"Articles","previous_headings":"Regional Questions","what":"Plot Biggest decrease in Refugee Population","title":"Chart Library","text":"","code":"plot_reg_decrease(year = 2021,                   lag = 5,                   topn = 5,                   region = \"Americas\",                   pop_type = c(\"REF\", \"ASY\", \"OIP\"))"},{"path":"/articles/chart-library.html","id":"plot-biggest-increase-in-refugee-population","dir":"Articles","previous_headings":"Regional Questions","what":"Plot Biggest increase in Refugee Population","title":"Chart Library","text":"","code":"plot_reg_increase(year = 2021,                   lag = 5,                   topn = 5,                   region = \"Americas\",                   pop_type = c(\"REF\", \"ASY\", \"OIP\")) plot_reg_increase(year = 2021,                   lag = 5,                   topn = 5,                   region = \"Asia\",                   pop_type = c(\"REF\", \"ASY\", \"OIP\"))"},{"path":"/articles/chart-library.html","id":"proportion-of-the-population-who-are-refugees-by-country-of-origin-sdg-indicator-10-7-4","dir":"Articles","previous_headings":"Regional Questions","what":"Proportion of the population who are refugees, by country of origin (SDG indicator 10.7.4 )","title":"Chart Library","text":"","code":"plot_reg_prop_origin(year = 2022,  region = \"Americas\")"},{"path":"/articles/chart-library.html","id":"decision-on-refugee-status-determination","dir":"Articles","previous_headings":"Regional Questions","what":"Decision on Refugee Status Determination","title":"Chart Library","text":"","code":"plot_reg_rsd(year = 2022,              region = \"Americas\" ,                         top_n_countries = 10,                          measure = \"Recognized\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. plot_reg_rsd(year = 2022,              region = \"Americas\" ,                         top_n_countries = 5,                          measure = \"ComplementaryProtection\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. plot_reg_rsd(year = 2022,              region = \"Americas\" ,                         top_n_countries = 10,                          measure = \"TotalDecided\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. plot_reg_rsd(year = 2022,              region = \"Americas\" ,                         top_n_countries = 10,                          measure = \"RefugeeRecognitionRate\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. plot_reg_rsd(year = 2022,              region = \"Americas\" ,                         top_n_countries = 10,                          measure = \"TotalRecognitionRate\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. # plot_reg_rsd(year = 2022, #              region = \"Europe\",  #                         top_n_countries = 10,  #                         measure = \"Recognized\")"},{"path":"/articles/chart-library.html","id":"plot-evolution-of-solutions-in-the-region","dir":"Articles","previous_headings":"Regional Questions","what":"Plot Evolution of Solutions in the Region","title":"Chart Library","text":"","code":"plot_reg_solution(year = 2022,                              region = \"Americas\",                             lag = 10) #> `geom_smooth()` using formula = 'y ~ x' #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : span too small.  fewer data values than degrees of freedom. #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : pseudoinverse used at 2012 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : neighborhood radius 1.05 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : reciprocal condition number 0 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : There are other near singularities as well. 1.1025 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : span too small.  fewer data values than degrees of freedom. #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : pseudoinverse used at 2012 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : neighborhood radius 1.05 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : reciprocal condition number 0 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : There are other near singularities as well. 1.1025 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : span too small.  fewer data values than degrees of freedom. #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : pseudoinverse used at 2012 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : neighborhood radius 1.045 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : reciprocal condition number 0 #> Warning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric, #> : There are other near singularities as well. 1.092"},{"path":"/articles/chart-library.html","id":"mapping-population","dir":"Articles","previous_headings":"Regional Questions","what":"Mapping Population","title":"Chart Library","text":"","code":"plot_reg_map(  year = 2022,                             region = \"Asia\",                             topn = 5,                             pop_type =  c(\"REF\", \"ASY\", \"OIP\"),                             projection = \"Mercator\",                             maxSymbolsize = .25) #> Warning in CPL_crs_from_input(x): GDAL Message 1: +init=epsg:XXXX syntax is #> deprecated. It might return a CRS with a non-EPSG compliant axis order. # plot_reg_map(  year = 2022, #                             region = \"WestAfrica\", #                             topn = 5, #                             pop_type =  c(\"REF\", \"ASY\", \"OIP\"), #                             projection = \"Mercator\", #                             maxSymbolsize = .25)"},{"path":"/articles/chart-library.html","id":"report-templates","dir":"Articles","previous_headings":"","what":"Report Templates","title":"Chart Library","text":"Templates re-built notebook includes plotting functions integrated report parameters. Templates available html report (can converted PDF) PowerPoint presentations, defined UNHCR standard brand (cf unhcrdown. templates available either countries regions.","code":""},{"path":"/articles/chart-library.html","id":"country-factsheet","dir":"Articles","previous_headings":"Report Templates","what":"Country Factsheet","title":"Chart Library","text":"","code":"## generate for one country # template_CtryFactsheet(year = 2022, country_asylum_iso3c = \"USA\",   folder = \"Report\")  # ## Generate for a specific region # region <- \"Americas\" # year <- 2022 # library(tidyverse) # ## get all countries with more than 1000 Reported individuals # ctr <- dplyr::left_join( x= ForcedDisplacementStat::end_year_population_totals_long, #                                 y= ForcedDisplacementStat::reference, #                                 by = c(\"CountryAsylumCode\" = \"iso_3\")) |> #         filter(Year == year & #                 UNHCRBureau == region ) |> #         group_by( CountryAsylumName, CountryAsylumCode   ) |> #         summarise(Value = sum(Value) ) |> #         ungroup() |> #         filter( Value  > 1000 ) #  # for ( i in (1:nrow(ctr))) { #     # i <- 1 #     country_asylum_iso3ci = as.character(ctr[i ,2 ]) #     cat(paste0(country_asylum_iso3ci, \"\\n\")) #     unhcrdatapackage::template_CtryFactsheet(year = 2022,  #               country_asylum_iso3c = country_asylum_iso3ci,   #                folder = \"Report\")  }"},{"path":"/articles/chart-library.html","id":"country-presentation","dir":"Articles","previous_headings":"Report Templates","what":"Country Presentation","title":"Chart Library","text":"","code":"## generate for one country # unhcrdatapackage::template_CtryPrez(year = 2022,  #                             country_asylum_iso3c = \"CHL\", #                             folder = \"Report\")  # ## Generate for a specific region # region <- \"Americas\" # year <- 2022 # library(tidyverse) # ## get all countries with more than 1000 Reported individuals # ctr <- dplyr::left_join( x= ForcedDisplacementStat::end_year_population_totals_long, #                                 y= ForcedDisplacementStat::reference, #                                 by = c(\"CountryAsylumCode\" = \"iso_3\")) |> #         filter(Year == year & #                 UNHCRBureau == region ) |> #         group_by( CountryAsylumName, CountryAsylumCode   ) |> #         summarise(Value = sum(Value) ) |> #         ungroup() |> #         filter( Value  > 1000 ) #  # for ( i in (1:nrow(ctr))) { #     # i <- 1 #     country_asylum_iso3ci = as.character(ctr[i ,2 ]) #     cat(paste0(country_asylum_iso3ci, \"\\n\")) #     unhcrdatapackage::template_CtryFactsheet(year = 2022,  #                                 country_asylum_iso3c = country_asylum_iso3ci, #                                folder = \"Report\")  }"},{"path":"/articles/chart-library.html","id":"country-slides","dir":"Articles","previous_headings":"Report Templates","what":"Country Slides","title":"Chart Library","text":"","code":"## generate for one country # unhcrdatapackage::template_Ctryslides(year = 2022,  #                             country_asylum_iso3c = \"CHL\", #                             folder = \"Report\")  # ## Generate for a specific region # region <- \"Americas\" # year <- 2022 # library(tidyverse) # ## get all countries with more than 1000 Reported individuals # ctr <- dplyr::left_join( x= ForcedDisplacementStat::end_year_population_totals_long, #                                 y= ForcedDisplacementStat::reference, #                                 by = c(\"CountryAsylumCode\" = \"iso_3\")) |> #         filter(Year == year & #                 UNHCRBureau == region ) |> #         group_by( CountryAsylumName, CountryAsylumCode   ) |> #         summarise(Value = sum(Value) ) |> #         ungroup() |> #         filter( Value  > 1000 ) #  # for ( i in (1:nrow(ctr))) { #     # i <- 1 #     country_asylum_iso3ci = as.character(ctr[i ,2 ]) #     cat(paste0(country_asylum_iso3ci, \"\\n\")) #     unhcrdatapackage::template_CtryFactsheet(year = 2022, #                                 country_asylum_iso3c = country_asylum_iso3ci, #                                folder = \"docs/factsheet\")  }"},{"path":"/articles/chart-library.html","id":"regional-factsheet","dir":"Articles","previous_headings":"Report Templates","what":"Regional Factsheet","title":"Chart Library","text":"","code":"# template_RegFactsheet(year = 2022,  #                       region = \"Europe\", lag = 10,   #                       folder = \"Report\")  ## We can also generate all factsheets in a loop for 2022  # region <-  ForcedDisplacementStat::reference |> #   dplyr::distinct(UNHCRBureau) |> #   dplyr::filter(!(is.na(UNHCRBureau))) |> #   dplyr::pull() #  # for( reg in region) { #   unhcrdatapackage::template_RegFactsheet(year = 2022,  #                         region = reg, lag = 10,  #                         folder = \"Report\") # }"},{"path":"/articles/chart-library.html","id":"regional-presentation","dir":"Articles","previous_headings":"Report Templates","what":"Regional Presentation","title":"Chart Library","text":"","code":"# template_RegPrez(year = 2022, region = \"Americas\", lag = 10,   folder = \"Report\")  # # Generate for a specific region # region <- \"Americas\" # year <- 2022 # library(tidyverse) # ## get all countries with more than 1000 Reported individuals # ctr <- dplyr::left_join( x= ForcedDisplacementStat::end_year_population_totals_long, #                                 y= ForcedDisplacementStat::reference, #                                 by = c(\"CountryAsylumCode\" = \"iso_3\")) |> #         filter(Year == year & #                 UNHCRBureau == region ) |> #         group_by( CountryAsylumName, CountryAsylumCode   ) |> #         summarise(Value = sum(Value) ) |> #         ungroup() |> #         filter( Value  > 1000 ) #  #   for ( i in (1:nrow(ctr))) { #     # i <- 1 #     country_asylum_iso3c = as.character(ctr[i ,2 ]) #     cat(paste0(country_asylum_iso3c, \"\\n\")) #     unhcrdatapackage::template_CtryPrez(year = 2022,  #                                   country_asylum_iso3c = country_asylum_iso3c,   #                                   folder = \"Report\") #   }"},{"path":[]},{"path":"/articles/golem-modules-for-shinyapp.html","id":"mod_home","dir":"Articles","previous_headings":"","what":"mod_home","title":"Golem Modules for ShinyApp","text":"shared module takes parameters filter data.. https://stackoverflow.com/questions/69172472/shiny-modules-inside--modules/69173076#69173076","code":""},{"path":"/articles/golem-modules-for-shinyapp.html","id":"shared-modules","dir":"Articles","previous_headings":"","what":"Shared Modules","title":"Golem Modules for ShinyApp","text":"app includes 2 shared modules - One selection countries year - passed plots One takes global reactive values - type plot (form library) parameter output ggplot2 charts","code":""},{"path":"/articles/golem-modules-for-shinyapp.html","id":"mod_input","dir":"Articles","previous_headings":"Shared Modules","what":"mod_input","title":"Golem Modules for ShinyApp","text":"shared module takes parameters filter data.. https://stackoverflow.com/questions/69172472/shiny-modules-inside--modules/69173076#69173076","code":""},{"path":"/articles/golem-modules-for-shinyapp.html","id":"mod_plotviz","dir":"Articles","previous_headings":"Shared Modules","what":"mod_plotviz","title":"Golem Modules for ShinyApp","text":"module take argument plot based library reactive values app.","code":""},{"path":"/articles/golem-modules-for-shinyapp.html","id":"interface-componnnent","dir":"Articles","previous_headings":"","what":"Interface Componnnent","title":"Golem Modules for ShinyApp","text":"interface component allows navigate within library home page - typically behind series shinydashboard::tabItem module includes different tabsets pplotting functions presented","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/library.html","id":"divisible-content-strategy-gives-you-more-content-with-less-work","dir":"Articles","previous_headings":"","what":"Divisible Content Strategy Gives You More Content With Less Work","title":"Why a chart Library?","text":"explained blog post Column Five Media, divisible content strategy approach content creation use single asset create multiple pieces. example, might break e-book articles, infographic, social microcontent, even brand video.  chart library therefore designed speed creation microcontent can re-embedded wherever needed: Social Media Donor Presentation Talking points Situation Analysis Protection Monitoring Reports approach, effort spent polishing content can benefit series product - Content Less Work!","code":""},{"path":"/articles/library.html","id":"do-not-waste-time-with-charts-creation-focus-on-the-message-and-on-the-story","dir":"Articles","previous_headings":"","what":"Do not waste time with charts creation, focus on the message and on the story","title":"Why a chart Library?","text":"Impactful charts characterized story telling ability. Using default plots package, chart effectiveness can improved : Changing charts existing default title subtitle replace key message call Action Annotating chart provide interpretation hint around context: See tutorial Highlighting specific parts chart reinforce main message ease legibility: See tutorial here_ Adding background information","code":""},{"path":"/articles/library.html","id":"how-to-get-started-start-building-your-country-or-regionalsituational-factsheet-now","dir":"Articles","previous_headings":"","what":"How to get started: Start building your country or regional/situational factsheet now","title":"Why a chart Library?","text":"just want explore package, can instance create account Rstudio Cloud","code":""},{"path":"/articles/library.html","id":"first-install-the-package","dir":"Articles","previous_headings":"How to get started: Start building your country or regional/situational factsheet now","what":"First install the package","title":"Why a chart Library?","text":"","code":"remotes::install_github(\"vidonne/unhcrdesign\") remotes::install_github(\"vidonne/unhcrthemes\") remotes::install_github(\"vidonne/unhcrdown\") remotes::install_github(\"edouard-legoupil/unhcrdatapackage\")"},{"path":"/articles/library.html","id":"report-template","dir":"Articles","previous_headings":"How to get started: Start building your country or regional/situational factsheet now","what":"Report Template","title":"Why a chart Library?","text":"just create new markdown file using one template included package - can either powepoint html/PDF.  RMD report, top part file, header called YAML. YAML header contains YAML arguments, “title”, “author”, “output”, demarcated three dashes (—) either end. can adjust notebook parameters country instance knit report.","code":""},{"path":"/articles/library.html","id":"adjust-charts-within-the-template","dir":"Articles","previous_headings":"How to get started: Start building your country or regional/situational factsheet now","what":"Adjust charts within the template","title":"Why a chart Library?","text":"notebook chunk includes one plotting function Note want change title existing chart just add: labs new title case use PowerPoint template, need append 2 instructions output becomes editable obejct within resuting powerpoint. -> p dml(ggobj = p, fonts = list(serif = 'Lato'))","code":"plot_ctr_population_type_abs(year = params$year,                     country_asylum_iso3c = params$country,                     top_n_countries = 9,                     pop_type = \"REF\"                     ) plot_ctr_population_type_abs(year = params$year,                     country_asylum_iso3c = params$country,                     top_n_countries = 9,                     pop_type = \"REF\"                     ) +   labs(title = paste0(\"Refugees: Main Countries of origin | \", params$year)) plot_ctr_population_type_abs(year = params$year,                     country_asylum_iso3c = params$country,                     top_n_countries = 9,                     pop_type = \"REF\"                     ) +   labs(title = paste0(\"Refugees: Main Countries of origin | \", params$year)) -> p dml(ggobj = p, fonts = list(serif = 'Lato'))"},{"path":[]},{"path":"/articles/report-template.html","id":"country-factsheet","dir":"Articles","previous_headings":"Template","what":"Country Factsheet","title":"Report Template","text":"","code":"## generate for one country # template_CtryFactsheet(year = 2022, country_asylum_iso3c = \"USA\",   folder = \"Report\")  # ## Generate for a specific region # region <- \"Americas\" # year <- 2022 # library(tidyverse) # ## get all countries with more than 1000 Reported individuals # ctr <- dplyr::left_join( x= ForcedDisplacementStat::end_year_population_totals_long, #                                 y= ForcedDisplacementStat::reference, #                                 by = c(\"CountryAsylumCode\" = \"iso_3\")) |> #         filter(Year == year & #                 UNHCRBureau == region ) |> #         group_by( CountryAsylumName, CountryAsylumCode   ) |> #         summarise(Value = sum(Value) ) |> #         ungroup() |> #         filter( Value  > 1000 ) #  # for ( i in (1:nrow(ctr))) { #     # i <- 1 #     country_asylum_iso3ci = as.character(ctr[i ,2 ]) #     cat(paste0(country_asylum_iso3ci, \"\\n\")) #     unhcrdatapackage::template_CtryFactsheet(year = 2022,  #               country_asylum_iso3c = country_asylum_iso3ci,   #                folder = \"Report\")  }"},{"path":"/articles/report-template.html","id":"country-presentation","dir":"Articles","previous_headings":"Template","what":"Country Presentation","title":"Report Template","text":"","code":"## generate for one country # unhcrdatapackage::template_CtryPrez(year = 2022,  #                             country_asylum_iso3c = \"CHL\", #                             folder = \"Report\")  # ## Generate for a specific region # region <- \"Americas\" # year <- 2022 # library(tidyverse) # ## get all countries with more than 1000 Reported individuals # ctr <- dplyr::left_join( x= ForcedDisplacementStat::end_year_population_totals_long, #                                 y= ForcedDisplacementStat::reference, #                                 by = c(\"CountryAsylumCode\" = \"iso_3\")) |> #         filter(Year == year & #                 UNHCRBureau == region ) |> #         group_by( CountryAsylumName, CountryAsylumCode   ) |> #         summarise(Value = sum(Value) ) |> #         ungroup() |> #         filter( Value  > 1000 ) #  # for ( i in (1:nrow(ctr))) { #     # i <- 1 #     country_asylum_iso3ci = as.character(ctr[i ,2 ]) #     cat(paste0(country_asylum_iso3ci, \"\\n\")) #     unhcrdatapackage::template_CtryFactsheet(year = 2022,  #                                 country_asylum_iso3c = country_asylum_iso3ci, #                                folder = \"Report\")  }"},{"path":"/articles/report-template.html","id":"country-slides","dir":"Articles","previous_headings":"Template","what":"Country Slides","title":"Report Template","text":"","code":"## generate for one country # unhcrdatapackage::template_Ctryslides(year = 2022,  #                             country_asylum_iso3c = \"CHL\", #                             folder = \"Report\")  # ## Generate for a specific region # region <- \"Americas\" # year <- 2022 # library(tidyverse) # ## get all countries with more than 1000 Reported individuals # ctr <- dplyr::left_join( x= ForcedDisplacementStat::end_year_population_totals_long, #                                 y= ForcedDisplacementStat::reference, #                                 by = c(\"CountryAsylumCode\" = \"iso_3\")) |> #         filter(Year == year & #                 UNHCRBureau == region ) |> #         group_by( CountryAsylumName, CountryAsylumCode   ) |> #         summarise(Value = sum(Value) ) |> #         ungroup() |> #         filter( Value  > 1000 ) #  # for ( i in (1:nrow(ctr))) { #     # i <- 1 #     country_asylum_iso3ci = as.character(ctr[i ,2 ]) #     cat(paste0(country_asylum_iso3ci, \"\\n\")) #     unhcrdatapackage::template_CtryFactsheet(year = 2022, #                                 country_asylum_iso3c = country_asylum_iso3ci, #                                folder = \"docs/factsheet\")  }"},{"path":"/articles/report-template.html","id":"regional-factsheet","dir":"Articles","previous_headings":"Template","what":"Regional Factsheet","title":"Report Template","text":"","code":"# template_RegFactsheet(year = 2022,  #                       region = \"Europe\", lag = 10,   #                       folder = \"Report\")  ## We can also generate all factsheets in a loop for 2022  # region <-  ForcedDisplacementStat::reference |> #   dplyr::distinct(UNHCRBureau) |> #   dplyr::filter(!(is.na(UNHCRBureau))) |> #   dplyr::pull() #  # for( reg in region) { #   unhcrdatapackage::template_RegFactsheet(year = 2022,  #                         region = reg, lag = 10,  #                         folder = \"Report\") # }"},{"path":"/articles/report-template.html","id":"regional-presentation","dir":"Articles","previous_headings":"Template","what":"Regional Presentation","title":"Report Template","text":"","code":"# template_RegPrez(year = 2022, region = \"Americas\", lag = 10,   folder = \"Report\")  # # Generate for a specific region # region <- \"Americas\" # year <- 2022 # library(tidyverse) # ## get all countries with more than 1000 Reported individuals # ctr <- dplyr::left_join( x= ForcedDisplacementStat::end_year_population_totals_long, #                                 y= ForcedDisplacementStat::reference, #                                 by = c(\"CountryAsylumCode\" = \"iso_3\")) |> #         filter(Year == year & #                 UNHCRBureau == region ) |> #         group_by( CountryAsylumName, CountryAsylumCode   ) |> #         summarise(Value = sum(Value) ) |> #         ungroup() |> #         filter( Value  > 1000 ) #  #   for ( i in (1:nrow(ctr))) { #     # i <- 1 #     country_asylum_iso3c = as.character(ctr[i ,2 ]) #     cat(paste0(country_asylum_iso3c, \"\\n\")) #     unhcrdatapackage::template_CtryPrez(year = 2022,  #                                   country_asylum_iso3c = country_asylum_iso3c,   #                                   folder = \"Report\") #   }"},{"path":[]},{"path":"/articles/report-template.html","id":"annotate_gadget","dir":"Articles","previous_headings":"Utilities","what":"annotate_gadget","title":"Report Template","text":"shinyGadget add annotation ggplot2!.. Based https://github.com/MattCowgill/ggannotate also inspired https://community.rstudio.com/t/graph-annotator-shiny-contest-submission/104687 button “Position annotation chart” launched: window chart - click first time indicate top-left point position infobox ask arrow required - - windows closed annotation added - yes - click second time add arrow pointer - window closed annotation added- - button added option remove annotation - user can click ","code":"# if (interactive()) # thischart <- plot_ctr_population_type_abs(year = 2020, #                     country_asylum_iso3c = \"USA\", #                     top_n_countries = 4, #                     pop_type = \"REF\" #                     ) # annotate_gadget(chart = thischart, viewer=paneViewer())"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Edouard Legoupil. Author, maintainer. Matheus Soldi Hardt. Author. Hisham Galal. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Legoupil E, Soldi Hardt M (2023). unhcrdatapackage: UNHCR Population Statistics Database Chart Library Factsheet Template. R package version 0.1.8, https://edouard-legoupil.github.io/unhcrdatapackage/docs/.","code":"@Manual{,   title = {unhcrdatapackage: UNHCR Population Statistics Database with Chart Library and Factsheet Template},   author = {Edouard Legoupil and Matheus {Soldi Hardt}},   year = {2023},   note = {R package version 0.1.8},   url = {https://edouard-legoupil.github.io/unhcrdatapackage/docs/}, }"},{"path":"/index.html","id":"unhcrdatapackage-a-chart-library-on-forced-displacement-","dir":"","previous_headings":"","what":"UNHCR Population Statistics Database with Chart Library and\n    Factsheet Template","title":"UNHCR Population Statistics Database with Chart Library and\n    Factsheet Template","text":"“Numbers important story tell. rely give voice!” – Stephen package conveniently bring together series predefined plots order improve data literacy facilitate creation persuasive data stories. can also consult directly Data Literacy App created package. plot created function provides recipe creates re-usable chart line Divisible Content Strategy. functions rendered predefined Report templates Countries Regions, generated either html, PDF PowerPoint presentations. may enhance charts story-telling ability adjusting message title, highlighting specific parts data adding annotation ease interpretation provide contextual background. can consult default Factsheets Americas link. Note, need data can use directly {ForcedDisplacementStat}. can also explore data Refugee Data Finder. package promotes reproducible approaches.UNHCR Staff want learn R, visit UNHCR Learn & Connect- R training. Designers, convenient versions plot svg format (usable Illustrator/Inkscape Indesign/Scribus) can generated directly : unhcrthemes::unhcr_save(plot, \"plot.svg\").","code":""},{"path":"/index.html","id":"missing-chart","dir":"","previous_headings":"","what":"Missing chart","title":"UNHCR Population Statistics Database with Chart Library and\n    Factsheet Template","text":"can submit request new charts Contributions, specifically creation new functions chart library welcome! Please consult instructions ","code":""},{"path":"/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"UNHCR Population Statistics Database with Chart Library and\n    Factsheet Template","text":"package comes shiny Interface available : https://rstudio.unhcr.org/Data_Literacy/ can also install package locally use . Windows, first need install Rtools top R Rstudio order install package locally. Make sure JAVA_HOME environment variable set used map generation functions {r} install.packages(\"pak\") pak::pkg_install(\"edouard-legoupil/unhcrdatapackage\") {r} ## can run app locally unhcrdatapackage::run_app()","code":""},{"path":"/pull_request_template.html","id":"issues-to-validate-to-close-","dir":"","previous_headings":"","what":"Issues to validate to close :","title":"NA","text":"issue #","code":""},{"path":"/pull_request_template.html","id":"processed-issues-to-keep-open-or-in-progress","dir":"","previous_headings":"","what":"Processed issues to keep open or in progress:","title":"NA","text":"issue #","code":""},{"path":"/pull_request_template.html","id":"checklist","dir":"","previous_headings":"","what":"Checklist:","title":"NA","text":"package check go local? CI pass? added / fixed features documented, tested? added features / solved problems briefly presented PR message? changes related tickets / issues listed commits PR ? tickets “review” mode Project Tracking Board? ticket, closed acceptance PR, contain comment tells validate ?","code":""},{"path":"/reference/app_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Assemble UI modules — app_ui","title":"Assemble UI modules — app_ui","text":"Assemble UI modules","code":""},{"path":"/reference/app_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assemble UI modules — app_ui","text":"","code":"app_ui()"},{"path":"/reference/app_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assemble UI modules — app_ui","text":"Front end app","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"/reference/plot_ctr_asylum.html","id":null,"dir":"Reference","previous_headings":"","what":"Asylum Applications & Decision over time — plot_ctr_asylum","title":"Asylum Applications & Decision over time — plot_ctr_asylum","text":"charts allow visualize trends terms asylum applications, decision refugee status recognition","code":""},{"path":"/reference/plot_ctr_asylum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asylum Applications & Decision over time — plot_ctr_asylum","text":"","code":"plot_ctr_asylum(   year = 2022,   country_asylum_iso3c = country_asylum_iso3,   lag = 10 )"},{"path":"/reference/plot_ctr_asylum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asylum Applications & Decision over time — plot_ctr_asylum","text":"year Numeric value year (instance 2020) country_asylum_iso3c Character value ISO-3 character code Country Asylum lag Number year used comparison base","code":""},{"path":"/reference/plot_ctr_asylum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Asylum Applications & Decision over time — plot_ctr_asylum","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_asylum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Asylum Applications & Decision over time — plot_ctr_asylum","text":"","code":"plot_ctr_asylum(year = 2022,                 country_asylum_iso3c = \"ECU\",                              lag = 10) #> Joining with `by = join_by(Year, CountryAsylumCode)`"},{"path":"/reference/plot_ctr_destination.html","id":null,"dir":"Reference","previous_headings":"","what":"Main Destination from  one specific countr — plot_ctr_destination","title":"Main Destination from  one specific countr — plot_ctr_destination","text":"Main Destination  one specific countr","code":""},{"path":"/reference/plot_ctr_destination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main Destination from  one specific countr — plot_ctr_destination","text":"","code":"plot_ctr_destination(   year = 2021,   country_origin_iso3c = country_origin_iso3c,   pop_type = pop_type )"},{"path":"/reference/plot_ctr_destination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main Destination from  one specific countr — plot_ctr_destination","text":"year Numeric value year (instance 2020) country_origin_iso3c Character value ISO-3 character code Country Origin pop_type Vector character values. Possible population type (e.g.: REF, IDP, ASY, OIP, OOC, STA)","code":""},{"path":"/reference/plot_ctr_destination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main Destination from  one specific countr — plot_ctr_destination","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_destination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main Destination from  one specific countr — plot_ctr_destination","text":"","code":"#  plot_ctr_destination(year = 2021,                      country_origin_iso3c = \"COL\",                      pop_type = c(\"REF\", \"ASY\")          )"},{"path":"/reference/plot_ctr_diff_in_pop_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Increases and Decreases in Population Groups — plot_ctr_diff_in_pop_groups","title":"Increases and Decreases in Population Groups — plot_ctr_diff_in_pop_groups","text":"Increases Decreases Population Groups","code":""},{"path":"/reference/plot_ctr_diff_in_pop_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Increases and Decreases in Population Groups — plot_ctr_diff_in_pop_groups","text":"","code":"plot_ctr_diff_in_pop_groups(   year = 2021,   country_asylum_iso3c = country_asylum_iso3c,   pop_type = pop_type )"},{"path":"/reference/plot_ctr_diff_in_pop_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Increases and Decreases in Population Groups — plot_ctr_diff_in_pop_groups","text":"year Numeric value year (instance 2020) country_asylum_iso3c Character value ISO-3 character code Country Asylum pop_type Vector character values. Possible population type (e.g.: REF, IDP, ASY, OIP, OOC, STA)","code":""},{"path":"/reference/plot_ctr_diff_in_pop_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Increases and Decreases in Population Groups — plot_ctr_diff_in_pop_groups","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_diff_in_pop_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Increases and Decreases in Population Groups — plot_ctr_diff_in_pop_groups","text":"","code":"#  plot_ctr_diff_in_pop_groups(year = 2022,                             country_asylum_iso3c = \"ROU\",                             pop_type = c(\"REF\", \"ASY\")          ) #> Warning: Returning more (or less) than 1 row per `summarise()` group was deprecated in #> dplyr 1.1.0. #> ℹ Please use `reframe()` instead. #> ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` #>   always returns an ungrouped data frame and adjust accordingly. #> ℹ The deprecated feature was likely used in the unhcrdatapackage package. #>   Please report the issue at #>   <https://github.com/edouard-legoupil/unhcrdatapackage/issues>."},{"path":"/reference/plot_ctr_disp_migrant.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting ratio Refugee/Asylum-seekers vs Migrant within a country — plot_ctr_disp_migrant","title":"Plotting ratio Refugee/Asylum-seekers vs Migrant within a country — plot_ctr_disp_migrant","text":"chart provides insights relative weight Forced Displacement countries generating type displacement. First, size circle represents number Refugees, Asylum-seekers need International Protection vertical axis represent Share immigrants country relation immigrants within country.  higher country axis, people country host country independently reason migrated.    horizontal axis displays share migration generated forced displacement within country origin.  country right, people country cam Forced Displacement.","code":""},{"path":"/reference/plot_ctr_disp_migrant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting ratio Refugee/Asylum-seekers vs Migrant within a country — plot_ctr_disp_migrant","text":"","code":"plot_ctr_disp_migrant(year = 2021, country_asylum_iso3c, top_n_countries = 10)"},{"path":"/reference/plot_ctr_disp_migrant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting ratio Refugee/Asylum-seekers vs Migrant within a country — plot_ctr_disp_migrant","text":"year Numeric value year (instance 2020) country_asylum_iso3c Character value ISO-3 character code Country Asylum top_n_countries Numeric value number main countries graph display","code":""},{"path":"/reference/plot_ctr_disp_migrant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting ratio Refugee/Asylum-seekers vs Migrant within a country — plot_ctr_disp_migrant","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_disp_migrant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting ratio Refugee/Asylum-seekers vs Migrant within a country — plot_ctr_disp_migrant","text":"","code":"plot_ctr_disp_migrant(year = 2022,                     country_asylum_iso3c = \"MEX\" ,                     top_n_countries = 10)  # plot_ctr_disp_migrant(year = 2022, #                     country_asylum_iso3c = \"FRA\" )"},{"path":"/reference/plot_ctr_keyfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Key Figures — plot_ctr_keyfig","title":"Summary Key Figures — plot_ctr_keyfig","text":"Key figures can highlighted humanitarian icons   https://fontawesome.com/icons/categories/humanitarian","code":""},{"path":"/reference/plot_ctr_keyfig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Key Figures — plot_ctr_keyfig","text":"","code":"plot_ctr_keyfig(country_asylum_iso3c, year)"},{"path":"/reference/plot_ctr_keyfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Key Figures — plot_ctr_keyfig","text":"country_asylum_iso3c Character value ISO-3 character code Country Asylum year Numeric value year (instance 2020)","code":""},{"path":"/reference/plot_ctr_keyfig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Key Figures — plot_ctr_keyfig","text":"ggplot2","code":""},{"path":"/reference/plot_ctr_keyfig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Key Figures — plot_ctr_keyfig","text":"","code":"plot_ctr_keyfig(year = 2022,                 country_asylum_iso3c = \"COL\")"},{"path":"/reference/plot_ctr_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a map with symbol proportional to population data by location within country — plot_ctr_location","title":"Create a map with symbol proportional to population data by location within country — plot_ctr_location","text":"Create map symbol proportional population data location within country","code":""},{"path":"/reference/plot_ctr_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a map with symbol proportional to population data by location within country — plot_ctr_location","text":"","code":"plot_ctr_location(year, country_asylum_iso3c, pop_type, mapbackground = \"osm\")"},{"path":"/reference/plot_ctr_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a map with symbol proportional to population data by location within country — plot_ctr_location","text":"year Numeric value year  (instance 2022).  data yet available year (aka still mid year reporting stage),  automatically fall back previous year country_asylum_iso3c Character value ISO-3 character code Country Asylum pop_type Vector character values. Possible population type (e.g.: REF, IDP, ASY, OIP, OOC, STA) mapbackground can \"osm\" (default), \"stamen-toner\" , \"stamen-terrain\",\"stamen-watercolor\".  mapbackground requires API key considered","code":""},{"path":"/reference/plot_ctr_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a map with symbol proportional to population data by location within country — plot_ctr_location","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a map with symbol proportional to population data by location within country — plot_ctr_location","text":"","code":"# plot_ctr_location(year = 2022, #                  country_asylum_iso3c = \"COL\", #                  pop_type = c(\"ASY\", \"REF\", \"OIP\")) #  # plot_ctr_location(year = 2021, #                  country_asylum_iso3c = \"COL\", #                  pop_type = c(\"IDP\")) #  # plot_ctr_location(year = 2022, #                  country_asylum_iso3c = \"CAN\", #                  pop_type = c(\"ASY\", \"REF\", \"OIP\")) #  # plot_ctr_location(year = 2021, #                  country_asylum_iso3c = \"MEX\", #                  pop_type = c(\"ASY\", \"REF\", \"OIP\"))"},{"path":"/reference/plot_ctr_origin_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Origin History — plot_ctr_origin_history","title":"Plot Origin History — plot_ctr_origin_history","text":"functions gives quick overview main source displacement terms origin country","code":""},{"path":"/reference/plot_ctr_origin_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Origin History — plot_ctr_origin_history","text":"","code":"plot_ctr_origin_history(   year = 2022,   lag = 5,   country_asylum_iso3c = country_asylum_iso3c,   pop_type = Population.type,   otherprop = 0.02 )"},{"path":"/reference/plot_ctr_origin_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Origin History — plot_ctr_origin_history","text":"year Numeric value year (instance 2020) lag Number year used comparison base country_asylum_iso3c Character value ISO-3 character code Country Asylum pop_type Vector character values. Possible population type (e.g.: REF, IDP, ASY, OIP, OIP, OOC, STA) otherprop value set default .02 - used merge origin \"\"","code":""},{"path":"/reference/plot_ctr_origin_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Origin History — plot_ctr_origin_history","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_origin_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Origin History — plot_ctr_origin_history","text":"","code":"plot_ctr_origin_history(year = 2022,                         lag = 5,                         country_asylum_iso3c = \"MEX\",                           pop_type = c(\"REF\",                                         \"ASY\",                                         \"OIP\",                                         \"IDP\" ),                         otherprop = .02)"},{"path":"/reference/plot_ctr_origin_recognition.html","id":null,"dir":"Reference","previous_headings":"","what":"Display A Chart with Refugee Recognition Rate for nationals from a specific country — plot_ctr_origin_recognition","title":"Display A Chart with Refugee Recognition Rate for nationals from a specific country — plot_ctr_origin_recognition","text":"absence internationally agreed methodology calculating recognition rates,  UNHCR uses two rates compute proportion refugee claims accepted year: * Refugee Recognition Rate divides number asylum-seekers granted Convention refugee   status total number accepted (Convention , relevant, complementary    protection) rejected cases (aka substantive decision). * Total Recognition Rate divides number asylum-seekers granted Convention    refugee status / complementary form protection total number    accepted (Convention , relevant, complementary protection)     rejected cases. Non-substantive decisions , extent possible, excluded  calculations. purpose international comparability,  UNHCR  uses two recognition rates report nationally calculated rates. See https://www.unhcr.org/4ce531e09.pdf","code":""},{"path":"/reference/plot_ctr_origin_recognition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display A Chart with Refugee Recognition Rate for nationals from a specific country — plot_ctr_origin_recognition","text":"","code":"plot_ctr_origin_recognition(   year = 2022,   country_origin_iso3c,   top_n_countries = 10,   measure = \"RefugeeRecognitionRate\",   order_by = \"TotalDecided\" )"},{"path":"/reference/plot_ctr_origin_recognition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display A Chart with Refugee Recognition Rate for nationals from a specific country — plot_ctr_origin_recognition","text":"year Numeric value year (instance 2020) country_origin_iso3c Character value ISO-3 character code Country Origin top_n_countries Numeric value number main countries graph display measure can either: * RefugeeRecognitionRate  * TotalRecognitionRate order_by can either: * Recognized   * ComplementaryProtection   * TotalDecided","code":""},{"path":"/reference/plot_ctr_origin_recognition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display A Chart with Refugee Recognition Rate for nationals from a specific country — plot_ctr_origin_recognition","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_origin_recognition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display A Chart with Refugee Recognition Rate for nationals from a specific country — plot_ctr_origin_recognition","text":"","code":"plot_ctr_origin_recognition(year = 2022,                      country_origin_iso3c = \"VEN\",                      top_n_countries = 10,                       measure = \"RefugeeRecognitionRate\",                      order_by = \"TotalDecided\" )"},{"path":"/reference/plot_ctr_population_type_abs.html","id":null,"dir":"Reference","previous_headings":"","what":"Main country of origin - Absolute value — plot_ctr_population_type_abs","title":"Main country of origin - Absolute value — plot_ctr_population_type_abs","text":"Main country origin - Absolute value","code":""},{"path":"/reference/plot_ctr_population_type_abs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main country of origin - Absolute value — plot_ctr_population_type_abs","text":"","code":"plot_ctr_population_type_abs(   year = 2021,   country_asylum_iso3c = country_asylum_iso3c,   top_n_countries = 9,   pop_type = \"REF\",   show_diff_label = TRUE )"},{"path":"/reference/plot_ctr_population_type_abs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main country of origin - Absolute value — plot_ctr_population_type_abs","text":"year Numeric value year (instance 2020) country_asylum_iso3c Character value ISO-3 character code Country Asylum top_n_countries Numeric value number main countries graph display pop_type Character value. Possible population type (e.g.: REF, IDP, ASY,   OIP, OOC, STA) show_diff_label logical indicate whether adding label displaying difference percentage compared previous year","code":""},{"path":"/reference/plot_ctr_population_type_abs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main country of origin - Absolute value — plot_ctr_population_type_abs","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_population_type_abs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main country of origin - Absolute value — plot_ctr_population_type_abs","text":"","code":"plot_ctr_population_type_abs(year = 2020,                     country_asylum_iso3c = \"USA\",                     top_n_countries = 4,                     pop_type = \"REF\",                     show_diff_label = FALSE                     )  #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `origin_data_prot = forcats::fct_explicit_na(origin_data_prot, #>   \"Other nationalities\")`. #> Caused by warning: #> ! `fct_explicit_na()` was deprecated in forcats 1.0.0. #> ℹ Please use `fct_na_value_to_level()` instead. #> ℹ The deprecated feature was likely used in the unhcrdatapackage package. #>   Please report the issue at #>   <https://github.com/edouard-legoupil/unhcrdatapackage/issues>.   ## Same with 9 top countries and Asylum-seekers included plot_ctr_population_type_abs(year = 2020,                     country_asylum_iso3c = \"USA\",                     top_n_countries = 9,                     pop_type = \"ASY\",                     show_diff_label = TRUE                     )"},{"path":"/reference/plot_ctr_population_type_per_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Graph of Population Type Over Year — plot_ctr_population_type_per_year","title":"Graph of Population Type Over Year — plot_ctr_population_type_per_year","text":"Graph Population Type Year","code":""},{"path":"/reference/plot_ctr_population_type_per_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graph of Population Type Over Year — plot_ctr_population_type_per_year","text":"","code":"plot_ctr_population_type_per_year(   year = 2022,   lag = 5,   country_asylum_iso3c = country_asylum_iso3c,   pop_type = Population.type )"},{"path":"/reference/plot_ctr_population_type_per_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graph of Population Type Over Year — plot_ctr_population_type_per_year","text":"year Numeric value year (instance 2020) lag Number year used comparison base country_asylum_iso3c Character value ISO-3 character code Country Asylum pop_type Vector character values. Possible population type  (e.g.: REF, IDP, ASY, OIP, OIP, OOC, STA)","code":""},{"path":"/reference/plot_ctr_population_type_per_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graph of Population Type Over Year — plot_ctr_population_type_per_year","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_population_type_per_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graph of Population Type Over Year — plot_ctr_population_type_per_year","text":"","code":"p <- plot_ctr_population_type_per_year(                          year = 2022,                          country_asylum_iso3c = \"PAN\",                          lag = 5,                          pop_type = c(\"REF\",                                         \"ASY\",                                         \"OIP\",                                         \"OOC\",                                        \"STA\",                                        \"IDP\" )                   ) p  ## Raw data can always be accessed with  #knitr::kable(ggplot2::ggplot_build(p)$plot$data )"},{"path":"/reference/plot_ctr_population_type_perc.html","id":null,"dir":"Reference","previous_headings":"","what":"Main country of origin - Percentage — plot_ctr_population_type_perc","title":"Main country of origin - Percentage — plot_ctr_population_type_perc","text":"Main country origin - Percentage","code":""},{"path":"/reference/plot_ctr_population_type_perc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main country of origin - Percentage — plot_ctr_population_type_perc","text":"","code":"plot_ctr_population_type_perc(   year = 2021,   country_asylum_iso3c = country_asylum_iso3c,   top_n_countries = 9,   pop_type = \"REF\" )"},{"path":"/reference/plot_ctr_population_type_perc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main country of origin - Percentage — plot_ctr_population_type_perc","text":"year Numeric value year (instance 2020) country_asylum_iso3c Character value ISO-3 character code Country Asylum top_n_countries Numeric value number main countries graph display pop_type Character value. Possible population type (e.g.: REF, IDP, ASY, OIP, OOC, STA)","code":""},{"path":"/reference/plot_ctr_population_type_perc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main country of origin - Percentage — plot_ctr_population_type_perc","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_population_type_perc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main country of origin - Percentage — plot_ctr_population_type_perc","text":"","code":"plot_ctr_population_type_perc(year = 2021,                     country_asylum_iso3c = \"BRA\",                     top_n_countries = 9,                     pop_type = \"REF\"  )    plot_ctr_population_type_perc(year = 2021,                     country_asylum_iso3c = \"BRA\",                     top_n_countries = 9,                     pop_type = \"ASY\"  )"},{"path":"/reference/plot_ctr_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Asylum Processing — plot_ctr_process","title":"Asylum Processing — plot_ctr_process","text":"Displaying Asylum processing","code":""},{"path":"/reference/plot_ctr_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asylum Processing — plot_ctr_process","text":"","code":"plot_ctr_process(year = 2022, country_asylum_iso3c, otherprop = 0.02)"},{"path":"/reference/plot_ctr_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asylum Processing — plot_ctr_process","text":"year Numeric value year (instance 2020) country_asylum_iso3c Character value ISO-3 character code Country Asylum otherprop value set default .02 - used merge origin \"\"","code":""},{"path":"/reference/plot_ctr_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Asylum Processing — plot_ctr_process","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Asylum Processing — plot_ctr_process","text":"","code":"plot_ctr_process(year = 2022,   country_asylum_iso3c = \"BOL\")   plot_ctr_process(year = 2022,   country_asylum_iso3c = \"CHL\")    plot_ctr_process(year = 2022,   country_asylum_iso3c = \"USA\",                               otherprop = .02)   plot_ctr_process(year = 2022,   country_asylum_iso3c = \"USA\",                               otherprop = .04)"},{"path":"/reference/plot_ctr_processing_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Average processing time from registration to first instance asylum decision — plot_ctr_processing_time","title":"Plot Average processing time from registration to first instance asylum decision — plot_ctr_processing_time","text":"indicator measures average number days date completion registration asylum application date notification first instance asylum decision persons notified first instance RSD/asylum decision reporting period.","code":""},{"path":"/reference/plot_ctr_processing_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Average processing time from registration to first instance asylum decision — plot_ctr_processing_time","text":"","code":"plot_ctr_processing_time(   year = 2022,   country_asylum_iso3c = country_asylum_iso3,   country_origin_iso3c = NULL,   procedureType = NULL )"},{"path":"/reference/plot_ctr_processing_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Average processing time from registration to first instance asylum decision — plot_ctr_processing_time","text":"year Numeric value year (instance 2020) country_asylum_iso3c Character value ISO-3 character code Country Asylum country_origin_iso3c Character value ISO-3 character code Country Asylum - NUL countries included procedureType indicates whether \"G\" (Government) \"J\" (Joint) \"U\" (UNHCR)","code":""},{"path":"/reference/plot_ctr_processing_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Average processing time from registration to first instance asylum decision — plot_ctr_processing_time","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_processing_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Average processing time from registration to first instance asylum decision — plot_ctr_processing_time","text":"Status determination procedures core protection function principle mechanism international protection needs Persons Concern may determined accordance key provisions 1951 Convention 1967 Protocol relating Status Refugees, 1954 Convention relating Status Stateless Persons, relevant regional refugee protection instruments. Status determination procedures therefore central full effective enjoyment universal right seek enjoy asylum specific rights guaranteed instruments. prolonged waiting period status determination procedure important indicator state efficiency, fairness, adaptability integrity hence, overall quality national asylum , depending context, UNHCR Mandate RSD procedure, including timeliness effectiveness overall protection response country. (RBM Outcome Indicator 2.1) - see [UNHCR Intranet](https://intranet.unhcr.org/content/dam/unhcr/intranet/protection-operations/compass/en/guidance/3/coreindicatorsmetadata/2.0","code":""},{"path":"/reference/plot_ctr_processing_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Average processing time from registration to first instance asylum decision — plot_ctr_processing_time","text":"","code":"plot_ctr_processing_time(year = 2022,                          country_asylum_iso3c = \"ARG\") #> Joining with `by = join_by(Year, CountryAsylumCode)`    plot_ctr_processing_time(year = 2022,                          country_asylum_iso3c = \"USA\") #> Joining with `by = join_by(Year, CountryAsylumCode)`   ## Display a filtered version of the chart for a specific country and procedure plot_ctr_processing_time(year = 2022,                          country_asylum_iso3c = \"EGY\",                          country_origin_iso3c = \"ERI\",                          procedureType = \"U\") #> Joining with `by = join_by(Year, CountryAsylumCode)`"},{"path":"/reference/plot_ctr_pyramid.html","id":null,"dir":"Reference","previous_headings":"","what":"Population Pyramid — plot_ctr_pyramid","title":"Population Pyramid — plot_ctr_pyramid","text":"Population Pyramid","code":""},{"path":"/reference/plot_ctr_pyramid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population Pyramid — plot_ctr_pyramid","text":"","code":"plot_ctr_pyramid(   year,   country_asylum_iso3c = country_asylum_iso3c,   pop_type = pop_type )"},{"path":"/reference/plot_ctr_pyramid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Population Pyramid — plot_ctr_pyramid","text":"year Numeric value year (instance 2022).  data yet available year (aka still mid year reporting stage),  automatically fall back previous year country_asylum_iso3c Character value ISO-3 character code Country Asylum pop_type Vector character values. Possible population type (e.g.: REF, IDP, ASY, OIP, OOC, STA)","code":""},{"path":"/reference/plot_ctr_pyramid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Population Pyramid — plot_ctr_pyramid","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_pyramid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Population Pyramid — plot_ctr_pyramid","text":"","code":"#  plot_ctr_pyramid(year = 2022,                  country_asylum_iso3c = \"COL\",                  pop_type = c(\"ASY\", \"REF\")                  )"},{"path":"/reference/plot_ctr_recognition.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a Chart with Refugee Recognition Rates — plot_ctr_recognition","title":"Display a Chart with Refugee Recognition Rates — plot_ctr_recognition","text":"absence internationally agreed methodology calculating recognition rates,  UNHCR uses two rates compute proportion refugee claims accepted year: * Refugee Recognition Rate divides number asylum-seekers granted Convention refugee   status total number accepted (Convention , relevant, complementary    protection) rejected cases (aka substantive decision). * Total Recognition Rate divides number asylum-seekers granted Convention    refugee status / complementary form protection total number    accepted (Convention , relevant, complementary protection)     rejected cases. Non-substantive decisions , extent possible, excluded  calculations. purpose international comparability,  UNHCR  uses two recognition rates report nationally calculated rates. See https://www.unhcr.org/4ce531e09.pdf","code":""},{"path":"/reference/plot_ctr_recognition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a Chart with Refugee Recognition Rates — plot_ctr_recognition","text":"","code":"plot_ctr_recognition(   year = 2022,   country_asylum_iso3c,   top_n_countries = 10,   measure = \"RefugeeRecognitionRate\",   order_by = \"TotalDecided\" )"},{"path":"/reference/plot_ctr_recognition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a Chart with Refugee Recognition Rates — plot_ctr_recognition","text":"year Numeric value year country_asylum_iso3c Character value ISO-3 character code Country Asylum top_n_countries Numeric value number main countries graph display measure can either: * RefugeeRecognitionRate  * TotalRecognitionRate order_by can either: * Recognized   * ComplementaryProtection   * TotalDecided","code":""},{"path":"/reference/plot_ctr_recognition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display a Chart with Refugee Recognition Rates — plot_ctr_recognition","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_recognition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display a Chart with Refugee Recognition Rates — plot_ctr_recognition","text":"","code":"plot_ctr_recognition(year = 2022,                      country_asylum_iso3c = \"USA\",                      top_n_countries = 10,                       measure = \"RefugeeRecognitionRate\",                      order_by = \"TotalDecided\" )"},{"path":"/reference/plot_ctr_solution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting solutions within a country — plot_ctr_solution","title":"Plotting solutions within a country — plot_ctr_solution","text":"part UNHCR standard approach, mostly 3 types durable solutions Refugees:  - Voluntary Repatriation origin country   - Naturalization host country  - Resettlement third country","code":""},{"path":"/reference/plot_ctr_solution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting solutions within a country — plot_ctr_solution","text":"","code":"plot_ctr_solution(   year = 2021,   lag = 10,   country_asylum_iso3c = country_asylum_iso3c,   sol_type )"},{"path":"/reference/plot_ctr_solution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting solutions within a country — plot_ctr_solution","text":"year Numeric value year (instance 2020) lag Number year used comparison base country_asylum_iso3c Character value ISO-3 character code Country Asylum sol_type Vector character values. Possible population type (e.g.:\"NAT\" \"RST\" \"RET\" \"RDP\")","code":""},{"path":"/reference/plot_ctr_solution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting solutions within a country — plot_ctr_solution","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_solution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting solutions within a country — plot_ctr_solution","text":"","code":"plot_ctr_solution(year = 2021,                   country_asylum_iso3c= \"UGA\",                   lag = 10,                   sol_type = c(\"NAT\", \"RST\", \"RET\", \"RDP\"))"},{"path":"/reference/plot_ctr_solution_recognition.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — plot_ctr_solution_recognition","title":"Title — plot_ctr_solution_recognition","text":"Description","code":""},{"path":"/reference/plot_ctr_solution_recognition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — plot_ctr_solution_recognition","text":"","code":"plot_ctr_solution_recognition(   year = 2021,   lag = 10,   country_asylum_iso3c = country_asylum_iso3c )"},{"path":"/reference/plot_ctr_solution_recognition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — plot_ctr_solution_recognition","text":"year Numeric value year (instance 2020) lag Number year used comparison base country_asylum_iso3c Character value ISO-3 character code Country Asylum","code":""},{"path":"/reference/plot_ctr_solution_recognition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — plot_ctr_solution_recognition","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_solution_recognition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — plot_ctr_solution_recognition","text":"","code":"plot_ctr_solution_recognition(year = 2022,                   country_asylum_iso3c= \"UGA\",                   lag = 10) #> `geom_braid()` using method = 'line'"},{"path":"/reference/plot_ctr_treemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Tree map of Population Groups within a country — plot_ctr_treemap","title":"Tree map of Population Groups within a country — plot_ctr_treemap","text":"Tree map Population Groups within country","code":""},{"path":"/reference/plot_ctr_treemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tree map of Population Groups within a country — plot_ctr_treemap","text":"","code":"plot_ctr_treemap(   year = 2021,   country_asylum_iso3c = country_asylum_iso3c,   pop_type = pop_type )"},{"path":"/reference/plot_ctr_treemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tree map of Population Groups within a country — plot_ctr_treemap","text":"year Numeric value year (instance 2020) country_asylum_iso3c Character value ISO-3 character code Country Asylum pop_type Vector character values. Possible population type (e.g.: REF, IDP, ASY, OIP, OOC, STA)","code":""},{"path":"/reference/plot_ctr_treemap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tree map of Population Groups within a country — plot_ctr_treemap","text":"ggplot2 object","code":""},{"path":"/reference/plot_ctr_treemap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tree map of Population Groups within a country — plot_ctr_treemap","text":"","code":"#  plot_ctr_treemap(year = 2021,                             country_asylum_iso3c = \"USA\",                             pop_type = c(\"REF\", \"ASY\")          )"},{"path":"/reference/plot_reg_decrease.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Biggest decrease in Refugee Population — plot_reg_decrease","title":"Plot Biggest decrease in Refugee Population — plot_reg_decrease","text":"Plot Biggest decrease Refugee Population","code":""},{"path":"/reference/plot_reg_decrease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Biggest decrease in Refugee Population — plot_reg_decrease","text":"","code":"plot_reg_decrease(   year = 2021,   lag = 5,   topn = 5,   region = \"Americas\",   pop_type = c(\"REF\", \"ASY\", \"OIP\") )"},{"path":"/reference/plot_reg_decrease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Biggest decrease in Refugee Population — plot_reg_decrease","text":"year Numeric value year (instance 2020) lag Number year used comparison base topn many top countries show.. region Character value related UNHCR bureau - left null, display whole world pop_type Vector character values. Possible population type  (e.g.: REF, IDP, ASY, OIP, OOC, STA)","code":""},{"path":"/reference/plot_reg_decrease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Biggest decrease in Refugee Population — plot_reg_decrease","text":"ggplot2 object","code":""},{"path":"/reference/plot_reg_decrease.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Biggest decrease in Refugee Population — plot_reg_decrease","text":"","code":"plot_reg_decrease(year = 2021,                   lag = 5,                   topn = 5,                   region = \"Americas\",                   pop_type = c(\"REF\", \"ASY\", \"OIP\"))"},{"path":"/reference/plot_reg_evolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Evolution over time — plot_reg_evolution","title":"Evolution over time — plot_reg_evolution","text":"Display evoluation time specific population group (one many)  defined number years (lag)","code":""},{"path":"/reference/plot_reg_evolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evolution over time — plot_reg_evolution","text":"","code":"plot_reg_evolution(   year = 2022,   lag = 5,   region,   pop_type = c(\"REF\", \"IDP\", \"ASY\", \"OOC\", \"STA\", \"OIP\") )"},{"path":"/reference/plot_reg_evolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evolution over time — plot_reg_evolution","text":"year Numeric value year (instance 2020) lag Number year used comparison base region Character value related UNHCR bureau - left null, display whole world pop_type Character value. Possible population type (e.g.: REF, IDP, ASY,   OIP, OOC, STA)","code":""},{"path":"/reference/plot_reg_evolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evolution over time — plot_reg_evolution","text":"ggplot2 object","code":""},{"path":"/reference/plot_reg_evolution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evolution over time — plot_reg_evolution","text":"","code":"plot_reg_evolution(year = 2021,                    lag = 5,                    region = \"Asia\",                    pop_type =  c( \"REF\", \"IDP\", \"ASY\", \"OOC\", \"STA\", \"OIP\"))"},{"path":"/reference/plot_reg_increase.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Biggest Increase in Refugee Population — plot_reg_increase","title":"Plot Biggest Increase in Refugee Population — plot_reg_increase","text":"Plot Biggest Increase Refugee Population","code":""},{"path":"/reference/plot_reg_increase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Biggest Increase in Refugee Population — plot_reg_increase","text":"","code":"plot_reg_increase(   year = 2021,   lag = 5,   topn = 5,   region = \"Americas\",   pop_type = c(\"REF\", \"ASY\", \"OIP\") )"},{"path":"/reference/plot_reg_increase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Biggest Increase in Refugee Population — plot_reg_increase","text":"year Numeric value year (instance 2020) lag Number year used comparison base topn many top countries show.. region Character value related UNHCR bureau - left null,  display whole world pop_type Vector character values. Possible population type  (e.g.: REF, IDP, ASY, OIP, OOC, STA)","code":""},{"path":"/reference/plot_reg_increase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Biggest Increase in Refugee Population — plot_reg_increase","text":"ggplot2 object","code":""},{"path":"/reference/plot_reg_increase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Biggest Increase in Refugee Population — plot_reg_increase","text":"","code":"plot_reg_increase(year = 2021,                   lag = 5,                   topn = 5,                   region = \"Americas\",                   pop_type = c(\"REF\", \"ASY\", \"OIP\"))   plot_reg_increase(year = 2021,                   lag = 5,                   topn = 5,                   region = \"Asia\",                   pop_type = c(\"REF\", \"ASY\", \"OIP\"))"},{"path":"/reference/plot_reg_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a regional map — plot_reg_map","title":"Plot a regional map — plot_reg_map","text":"Plot regional map","code":""},{"path":"/reference/plot_reg_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a regional map — plot_reg_map","text":"","code":"plot_reg_map(   year = 2022,   region = \"Americas\",   topn = 5,   pop_type = c(\"REF\", \"ASY\", \"OIP\"),   projection = \"Mercator\",   maxSymbolsize = 0.25 )"},{"path":"/reference/plot_reg_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a regional map — plot_reg_map","text":"year Numeric value year (instance 2020) region Character value related UNHCR bureau - left null, display whole world topn many top countries show.. pop_type Vector character values. Possible population type  (e.g.: REF, IDP, ASY, OIP, OOC, STA) projection use projection system - default \"Mercator\"  instance can Bertin 1953 projection -  https://visionscarto.net/bertin-projection-1953) maxSymbolsize size point adjust maximum value display map","code":""},{"path":"/reference/plot_reg_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a regional map — plot_reg_map","text":"base plot","code":""},{"path":"/reference/plot_reg_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a regional map — plot_reg_map","text":"","code":"plot_reg_map(  year = 2022,                             region = \"Asia\",                             topn = 5,                             pop_type =  c(\"REF\", \"ASY\", \"OIP\"),                             projection = \"Mercator\",                             maxSymbolsize = .25) #> Warning: GDAL Message 1: +init=epsg:XXXX syntax is deprecated. It might return a CRS with a non-EPSG compliant axis order.    # plot_reg_map(  year = 2022, #                             region = \"WestAfrica\", #                             topn = 5, #                             pop_type =  c(\"REF\", \"ASY\", \"OIP\"), #                             projection = \"Mercator\", #                             maxSymbolsize = .25)"},{"path":"/reference/plot_reg_origin_dest.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Population Origin-Destination within the region — plot_reg_origin_dest","title":"Plot Population Origin-Destination within the region — plot_reg_origin_dest","text":"Chord diagram showing Origin destination see - https://jokergoo.github.io/circlize_book/book/","code":""},{"path":"/reference/plot_reg_origin_dest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Population Origin-Destination within the region — plot_reg_origin_dest","text":"","code":"plot_reg_origin_dest(year = 2022, region = \"Americas\")"},{"path":"/reference/plot_reg_origin_dest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Population Origin-Destination within the region — plot_reg_origin_dest","text":"year Numeric value year (instance 2020) region Character value related UNHCR bureau - left null, display whole world","code":""},{"path":"/reference/plot_reg_origin_dest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Population Origin-Destination within the region — plot_reg_origin_dest","text":"plot ggplot2 object","code":""},{"path":"/reference/plot_reg_origin_dest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Population Origin-Destination within the region — plot_reg_origin_dest","text":"","code":"plot_reg_origin_dest(year = 2022,  region = \"Asia\")"},{"path":"/reference/plot_reg_population_type_abs.html","id":null,"dir":"Reference","previous_headings":"","what":"Main country of origin - Absolute value — plot_reg_population_type_abs","title":"Main country of origin - Absolute value — plot_reg_population_type_abs","text":"Main country origin - Absolute value","code":""},{"path":"/reference/plot_reg_population_type_abs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main country of origin - Absolute value — plot_reg_population_type_abs","text":"","code":"plot_reg_population_type_abs(   year = 2022,   region = \"Americas\",   top_n_countries = 9,   pop_type = \"REF\",   show_diff_label = TRUE )"},{"path":"/reference/plot_reg_population_type_abs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main country of origin - Absolute value — plot_reg_population_type_abs","text":"year Numeric value year (instance 2020) region Character value related UNHCR bureau - left null, display whole world top_n_countries Numeric value number main countries graph display pop_type Character value. Possible population type (e.g.: REF, IDP, ASY,   OIP, OOC, STA) show_diff_label logical indicate whether adding label displaying difference percentage compared previous year","code":""},{"path":"/reference/plot_reg_population_type_abs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main country of origin - Absolute value — plot_reg_population_type_abs","text":"ggplot2 object","code":""},{"path":"/reference/plot_reg_population_type_abs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main country of origin - Absolute value — plot_reg_population_type_abs","text":"","code":"plot_reg_population_type_abs(year = 2022,                               region = \"Americas\",                               top_n_countries = 5,                               pop_type = \"REF\",                               show_diff_label = TRUE                               )   plot_reg_population_type_abs(year = 2022,                               region = \"Americas\",                               top_n_countries = 5,                               pop_type = \"ASY\",                               show_diff_label = FALSE                               )"},{"path":"/reference/plot_reg_population_type_per_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Display evolution of different population type over years — plot_reg_population_type_per_year","title":"Display evolution of different population type over years — plot_reg_population_type_per_year","text":"Summary Evolution","code":""},{"path":"/reference/plot_reg_population_type_per_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display evolution of different population type over years — plot_reg_population_type_per_year","text":"","code":"plot_reg_population_type_per_year(   year = 2022,   lag = 5,   region,   pop_type = c(\"REF\", \"ASY\", \"IDP\", \"OIP\", \"STA\", \"OOC\") )"},{"path":"/reference/plot_reg_population_type_per_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display evolution of different population type over years — plot_reg_population_type_per_year","text":"year Numeric value year (instance 2020) lag Number year used comparison base region Character value related UNHCR bureau - left null, display whole world pop_type Vector character values. Possible population type (e.g.: REF, IDP, ASY, OIP, OIP, OOC, STA)","code":""},{"path":"/reference/plot_reg_population_type_per_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display evolution of different population type over years — plot_reg_population_type_per_year","text":"ggplot2 object","code":""},{"path":"/reference/plot_reg_population_type_per_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display evolution of different population type over years — plot_reg_population_type_per_year","text":"","code":"plot_reg_population_type_per_year(year = 2022,                                               lag = 5,                                      region  = \"Americas\",                                      pop_type =   c(\"REF\", \"ASY\", \"IDP\", \"OIP\", \"STA\", \"OOC\") ) #> Warning: The dot-dot notation (`..y..`) was deprecated in ggplot2 3.4.0. #> ℹ Please use `after_stat(y)` instead. #> ℹ The deprecated feature was likely used in the unhcrdatapackage package. #>   Please report the issue at #>   <https://github.com/edouard-legoupil/unhcrdatapackage/issues>."},{"path":"/reference/plot_reg_prop_origin.html","id":null,"dir":"Reference","previous_headings":"","what":"Proportion of the population who are refugees, by country of origin — plot_reg_prop_origin","title":"Proportion of the population who are refugees, by country of origin — plot_reg_prop_origin","text":"proportion country???s population become refugees SDG indicator 10.7.4  consistutes useful way identify countries origin producing refugees relative number inhabitants.","code":""},{"path":"/reference/plot_reg_prop_origin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proportion of the population who are refugees, by country of origin — plot_reg_prop_origin","text":"","code":"plot_reg_prop_origin(year = 2022, region = \"Americas\")"},{"path":"/reference/plot_reg_prop_origin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proportion of the population who are refugees, by country of origin — plot_reg_prop_origin","text":"year Numeric value year (instance 2020) region Character value related UNHCR bureau - left null, display whole world","code":""},{"path":"/reference/plot_reg_prop_origin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proportion of the population who are refugees, by country of origin — plot_reg_prop_origin","text":"ggplot2 object","code":""},{"path":"/reference/plot_reg_prop_origin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Proportion of the population who are refugees, by country of origin — plot_reg_prop_origin","text":"","code":"plot_reg_prop_origin(year = 2022,  region = \"Americas\")"},{"path":"/reference/plot_reg_rsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Chart on Refugee Status Determination — plot_reg_rsd","title":"Plot Chart on Refugee Status Determination — plot_reg_rsd","text":"Show main host origin countries based number decisions","code":""},{"path":"/reference/plot_reg_rsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Chart on Refugee Status Determination — plot_reg_rsd","text":"","code":"plot_reg_rsd(year = 2022, region, top_n_countries = 10, measure = \"Recognized\")"},{"path":"/reference/plot_reg_rsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Chart on Refugee Status Determination — plot_reg_rsd","text":"year Numeric value year (instance 2020) region Character value related UNHCR bureau - left null, display whole world top_n_countries Numeric value number main countries graph display measure can either: * Recognized   * ComplementaryProtection   * TotalDecided  * RefugeeRecognitionRate  * TotalRecognitionRate","code":""},{"path":"/reference/plot_reg_rsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Chart on Refugee Status Determination — plot_reg_rsd","text":"ggplot2 object","code":""},{"path":"/reference/plot_reg_rsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Chart on Refugee Status Determination — plot_reg_rsd","text":"","code":"plot_reg_rsd(year = 2022,              region = \"Americas\" ,                         top_n_countries = 10,                          measure = \"Recognized\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale.    plot_reg_rsd(year = 2022,              region = \"Americas\" ,                         top_n_countries = 5,                          measure = \"ComplementaryProtection\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale.    plot_reg_rsd(year = 2022,              region = \"Americas\" ,                         top_n_countries = 10,                          measure = \"TotalDecided\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale.    plot_reg_rsd(year = 2022,              region = \"Americas\" ,                         top_n_countries = 10,                          measure = \"RefugeeRecognitionRate\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale.    plot_reg_rsd(year = 2022,              region = \"Americas\" ,                         top_n_countries = 10,                          measure = \"TotalRecognitionRate\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale.    # plot_reg_rsd(year = 2022, #              region = \"Europe\",  #                         top_n_countries = 10,  #                         measure = \"Recognized\")"},{"path":"/reference/plot_reg_share.html","id":null,"dir":"Reference","previous_headings":"","what":"A simple chart to compare a population group between the Region and the rest of the world — plot_reg_share","title":"A simple chart to compare a population group between the Region and the rest of the world — plot_reg_share","text":"Simple treemap charts comparison","code":""},{"path":"/reference/plot_reg_share.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simple chart to compare a population group between the Region and the rest of the world — plot_reg_share","text":"","code":"plot_reg_share(year = 2022, region = \"Americas\", pop_type = \"REF\")"},{"path":"/reference/plot_reg_share.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A simple chart to compare a population group between the Region and the rest of the world — plot_reg_share","text":"year Numeric value year (instance 2020) region Character value related UNHCR bureau - left null, display whole world pop_type Vector character values. Possible population type (e.g.: REF, IDP, ASY, OIP, OOC, STA)","code":""},{"path":"/reference/plot_reg_share.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A simple chart to compare a population group between the Region and the rest of the world — plot_reg_share","text":"plot ggplot2 object","code":""},{"path":"/reference/plot_reg_share.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A simple chart to compare a population group between the Region and the rest of the world — plot_reg_share","text":"","code":"plot_reg_share(year = 2022,                                region = \"Americas\",                              pop_type = \"REF\") #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead.  plot_reg_share(year = 2022,                                region = \"Americas\",                              pop_type = \"ASY\") #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead.  plot_reg_share(year = 2022,                                region = \"Americas\",                              pop_type = \"OIP\") #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead.  plot_reg_share(year = 2022,                                region = \"Americas\",                              pop_type = \"IDP\") #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead.  plot_reg_share(year = 2022,                                region = \"Americas\",                              pop_type = \"STA\") #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead. #> Warning: Use of `datatree$Value` is discouraged. #> ℹ Use `Value` instead."},{"path":"/reference/plot_reg_solution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Solution over time in the region — plot_reg_solution","title":"Plot Solution over time in the region — plot_reg_solution","text":"Description","code":""},{"path":"/reference/plot_reg_solution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Solution over time in the region — plot_reg_solution","text":"","code":"plot_reg_solution(year = 2022, region = \"Americas\", lag = 10)"},{"path":"/reference/plot_reg_solution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Solution over time in the region — plot_reg_solution","text":"year Numeric value year (instance 2020) region Character value related UNHCR bureau - left null, display whole world lag Number year used comparison base","code":""},{"path":"/reference/plot_reg_solution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Solution over time in the region — plot_reg_solution","text":"ggplot2 object","code":""},{"path":"/reference/plot_reg_solution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Solution over time in the region — plot_reg_solution","text":"","code":"plot_reg_solution(year = 2022,                              region = \"Americas\",                             lag = 10) #> `geom_smooth()` using formula = 'y ~ x' #> Warning: span too small.   fewer data values than degrees of freedom. #> Warning: pseudoinverse used at 2012 #> Warning: neighborhood radius 1.05 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.1025 #> Warning: span too small.   fewer data values than degrees of freedom. #> Warning: pseudoinverse used at 2012 #> Warning: neighborhood radius 1.05 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.1025 #> Warning: span too small.   fewer data values than degrees of freedom. #> Warning: pseudoinverse used at 2012 #> Warning: neighborhood radius 1.05 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.1025"},{"path":"/reference/plot_reg_treemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Population group in the region — plot_reg_treemap","title":"Population group in the region — plot_reg_treemap","text":"Population group region","code":""},{"path":"/reference/plot_reg_treemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population group in the region — plot_reg_treemap","text":"","code":"plot_reg_treemap(   year = 2022,   region = \"Americas\",   pop_type = c(\"REF\", \"ASY\", \"IDP\", \"OIP\", \"STA\", \"OOC\") )"},{"path":"/reference/plot_reg_treemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Population group in the region — plot_reg_treemap","text":"year Numeric value year (instance 2020) region Character value related UNHCR bureau - left null, display whole world pop_type Vector character values. Possible population type (e.g.: REF, IDP, ASY, OIP, OOC, STA)","code":""},{"path":"/reference/plot_reg_treemap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Population group in the region — plot_reg_treemap","text":"plot ggplot2 object","code":""},{"path":"/reference/plot_reg_treemap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Population group in the region — plot_reg_treemap","text":"","code":"plot_reg_treemap(year = 2022,  region = \"Americas\")"},{"path":"/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the app — run_app","title":"Run the app — run_app","text":"Run app","code":""},{"path":"/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the app — run_app","text":"","code":"run_app(...)"},{"path":"/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the app — run_app","text":"... list Options added app","code":""},{"path":"/reference/template_CtryFactsheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an html / pdf country factsheet — template_CtryFactsheet","title":"Generate an html / pdf country factsheet — template_CtryFactsheet","text":"functions provides quick access basic Statistical Fact sheet  template can customised according needs","code":""},{"path":"/reference/template_CtryFactsheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an html / pdf country factsheet — template_CtryFactsheet","text":"","code":"template_CtryFactsheet(year = 2022, country_asylum_iso3c, folder = \"Report\")"},{"path":"/reference/template_CtryFactsheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an html / pdf country factsheet — template_CtryFactsheet","text":"year Numeric value year (instance 2022) country_asylum_iso3c Character value ISO-3 character code Country Asylum folder folder within project put generated report.  Folder created exist","code":""},{"path":"/reference/template_CtryFactsheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an html / pdf country factsheet — template_CtryFactsheet","text":"nothing file report generated","code":""},{"path":"/reference/template_CtryFactsheet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an html / pdf country factsheet — template_CtryFactsheet","text":"","code":"## generate for one country # template_CtryFactsheet(year = 2022, country_asylum_iso3c = \"USA\",   folder = \"Report\")  # ## Generate for a specific region # region <- \"Americas\" # year <- 2022 # library(tidyverse) # ## get all countries with more than 1000 Reported individuals # ctr <- dplyr::left_join( x= ForcedDisplacementStat::end_year_population_totals_long, #                                 y= ForcedDisplacementStat::reference, #                                 by = c(\"CountryAsylumCode\" = \"iso_3\")) |> #         filter(Year == year & #                 UNHCRBureau == region ) |> #         group_by( CountryAsylumName, CountryAsylumCode   ) |> #         summarise(Value = sum(Value) ) |> #         ungroup() |> #         filter( Value  > 1000 ) #  # for ( i in (1:nrow(ctr))) { #     # i <- 1 #     country_asylum_iso3ci = as.character(ctr[i ,2 ]) #     cat(paste0(country_asylum_iso3ci, \"\\n\")) #     unhcrdatapackage::template_CtryFactsheet(year = 2022,  #               country_asylum_iso3c = country_asylum_iso3ci,   #                folder = \"Report\")  }"},{"path":"/reference/template_CtryPrez.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate all country factsheet — template_CtryPrez","title":"Generate all country factsheet — template_CtryPrez","text":"Generate country factsheet","code":""},{"path":"/reference/template_CtryPrez.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate all country factsheet — template_CtryPrez","text":"","code":"template_CtryPrez(year = 2022, country_asylum_iso3c, folder = \"Report\")"},{"path":"/reference/template_CtryPrez.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate all country factsheet — template_CtryPrez","text":"year Numeric value year (instance 2022) country_asylum_iso3c Character value ISO-3 character code Country folder folder within project put generated report.  Folder created exist","code":""},{"path":"/reference/template_CtryPrez.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate all country factsheet — template_CtryPrez","text":"nothing file report generated","code":""},{"path":"/reference/template_CtryPrez.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate all country factsheet — template_CtryPrez","text":"","code":"## generate for one country # unhcrdatapackage::template_CtryPrez(year = 2022,  #                             country_asylum_iso3c = \"CHL\", #                             folder = \"Report\")  # ## Generate for a specific region # region <- \"Americas\" # year <- 2022 # library(tidyverse) # ## get all countries with more than 1000 Reported individuals # ctr <- dplyr::left_join( x= ForcedDisplacementStat::end_year_population_totals_long, #                                 y= ForcedDisplacementStat::reference, #                                 by = c(\"CountryAsylumCode\" = \"iso_3\")) |> #         filter(Year == year & #                 UNHCRBureau == region ) |> #         group_by( CountryAsylumName, CountryAsylumCode   ) |> #         summarise(Value = sum(Value) ) |> #         ungroup() |> #         filter( Value  > 1000 ) #  # for ( i in (1:nrow(ctr))) { #     # i <- 1 #     country_asylum_iso3ci = as.character(ctr[i ,2 ]) #     cat(paste0(country_asylum_iso3ci, \"\\n\")) #     unhcrdatapackage::template_CtryFactsheet(year = 2022,  #                                 country_asylum_iso3c = country_asylum_iso3ci, #                                folder = \"Report\")  }"},{"path":"/reference/template_Ctryslides.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate all country factsheet — template_Ctryslides","title":"Generate all country factsheet — template_Ctryslides","text":"Output PDF slide deck preserves well humanitarian icons","code":""},{"path":"/reference/template_Ctryslides.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate all country factsheet — template_Ctryslides","text":"","code":"template_Ctryslides(year = 2022, country_asylum_iso3c, folder = \"Report\")"},{"path":"/reference/template_Ctryslides.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate all country factsheet — template_Ctryslides","text":"year Numeric value year (instance 2022) country_asylum_iso3c Character value ISO-3 character code Country folder folder within project put generated report.  Folder created exist","code":""},{"path":"/reference/template_Ctryslides.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate all country factsheet — template_Ctryslides","text":"nothing file report generated","code":""},{"path":"/reference/template_Ctryslides.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate all country factsheet — template_Ctryslides","text":"","code":"## generate for one country # unhcrdatapackage::template_Ctryslides(year = 2022,  #                             country_asylum_iso3c = \"CHL\", #                             folder = \"Report\")  # ## Generate for a specific region # region <- \"Americas\" # year <- 2022 # library(tidyverse) # ## get all countries with more than 1000 Reported individuals # ctr <- dplyr::left_join( x= ForcedDisplacementStat::end_year_population_totals_long, #                                 y= ForcedDisplacementStat::reference, #                                 by = c(\"CountryAsylumCode\" = \"iso_3\")) |> #         filter(Year == year & #                 UNHCRBureau == region ) |> #         group_by( CountryAsylumName, CountryAsylumCode   ) |> #         summarise(Value = sum(Value) ) |> #         ungroup() |> #         filter( Value  > 1000 ) #  # for ( i in (1:nrow(ctr))) { #     # i <- 1 #     country_asylum_iso3ci = as.character(ctr[i ,2 ]) #     cat(paste0(country_asylum_iso3ci, \"\\n\")) #     unhcrdatapackage::template_CtryFactsheet(year = 2022, #                                 country_asylum_iso3c = country_asylum_iso3ci, #                                folder = \"docs/factsheet\")  }"},{"path":"/reference/template_RegFactsheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate all country factsheet — template_RegFactsheet","title":"Generate all country factsheet — template_RegFactsheet","text":"Generate country factsheet","code":""},{"path":"/reference/template_RegFactsheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate all country factsheet — template_RegFactsheet","text":"","code":"template_RegFactsheet(   year = 2022,   region = \"Americas\",   lag = 10,   folder = \"Report\" )"},{"path":"/reference/template_RegFactsheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate all country factsheet — template_RegFactsheet","text":"year Numeric value year (instance 2020) region Bureau covers countrie factsheet generate lag Number year used comparison base folder folder within project put generated report.  Folder created exist","code":""},{"path":"/reference/template_RegFactsheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate all country factsheet — template_RegFactsheet","text":"nothing file report generated","code":""},{"path":"/reference/template_RegFactsheet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate all country factsheet — template_RegFactsheet","text":"","code":"# template_RegFactsheet(year = 2022,  #                       region = \"Europe\", lag = 10,   #                       folder = \"Report\")  ## We can also generate all factsheets in a loop for 2022  # region <-  ForcedDisplacementStat::reference |> #   dplyr::distinct(UNHCRBureau) |> #   dplyr::filter(!(is.na(UNHCRBureau))) |> #   dplyr::pull() #  # for( reg in region) { #   unhcrdatapackage::template_RegFactsheet(year = 2022,  #                         region = reg, lag = 10,  #                         folder = \"Report\") # }"},{"path":"/reference/template_RegPrez.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate all country factsheet — template_RegPrez","title":"Generate all country factsheet — template_RegPrez","text":"Generate country factsheet","code":""},{"path":"/reference/template_RegPrez.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate all country factsheet — template_RegPrez","text":"","code":"template_RegPrez(year = 2022, region = \"Americas\", lag = 10, folder = \"Report\")"},{"path":"/reference/template_RegPrez.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate all country factsheet — template_RegPrez","text":"year Numeric value year (instance 2020) region Bureau covers countrie factsheet generate lag Number year used comparison base folder folder within project put generated report.  Folder created exist","code":""},{"path":"/reference/template_RegPrez.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate all country factsheet — template_RegPrez","text":"nothing file report generated","code":""},{"path":"/reference/template_RegPrez.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate all country factsheet — template_RegPrez","text":"","code":"# template_RegPrez(year = 2022, region = \"Americas\", lag = 10,   folder = \"Report\")  # # Generate for a specific region # region <- \"Americas\" # year <- 2022 # library(tidyverse) # ## get all countries with more than 1000 Reported individuals # ctr <- dplyr::left_join( x= ForcedDisplacementStat::end_year_population_totals_long, #                                 y= ForcedDisplacementStat::reference, #                                 by = c(\"CountryAsylumCode\" = \"iso_3\")) |> #         filter(Year == year & #                 UNHCRBureau == region ) |> #         group_by( CountryAsylumName, CountryAsylumCode   ) |> #         summarise(Value = sum(Value) ) |> #         ungroup() |> #         filter( Value  > 1000 ) #  #   for ( i in (1:nrow(ctr))) { #     # i <- 1 #     country_asylum_iso3c = as.character(ctr[i ,2 ]) #     cat(paste0(country_asylum_iso3c, \"\\n\")) #     unhcrdatapackage::template_CtryPrez(year = 2022,  #                                   country_asylum_iso3c = country_asylum_iso3c,   #                                   folder = \"Report\") #   }"},{"path":"/news/index.html","id":"unhcrdatapackage-018","dir":"Changelog","previous_headings":"","what":"unhcrdatapackage 0.1.8","title":"unhcrdatapackage 0.1.8","text":"Now separating clearly data source {ForcedDisplacementStat} - make lot easier set avoids rjava installed JAVA_HOME env variable required set .","code":""},{"path":"/news/index.html","id":"unhcrdatapackage-017","dir":"Changelog","previous_headings":"","what":"unhcrdatapackage 0.1.7","title":"unhcrdatapackage 0.1.7","text":"Revised reference add new Operation Country mapping adding xaringan template – unhcrdown::html_slides – branding correctly display humanitarian part fontawesome Fixing importFrom global variales checkhelper::print_globals()","code":""},{"path":"/news/index.html","id":"unhcrdatapackage-016","dir":"Changelog","previous_headings":"","what":"unhcrdatapackage 0.1.6","title":"unhcrdatapackage 0.1.6","text":"Added new plots Humanitarian font (key figures - disp vs host) Added charts better illustrate forced displacement migration Fixed one remaining type ppt template move fro VDA OIP Added geographic reference map reported locations subnational scale Added intro conclusion slide country ppt highlight data literacy challenge Added automatic fall back previous year data Mid-year report include key information (demographic pyramid location info…) changed package access WB API https://github.com/gshs-ornl/wbstats https://github.com/vincentarelbundock/WDI","code":""},{"path":"/news/index.html","id":"unhcrdatapackage-015","dir":"Changelog","previous_headings":"","what":"unhcrdatapackage 0.1.5","title":"unhcrdatapackage 0.1.5","text":"Update dataset mid-year 2022 data release (28 Oct 2022) Created dedicated function update_dataset() - see https://github.com/Edouard-Legoupil/unhcrdatapackage/blob/master/dev/flat_full.Rmd Adjusted new statistical categories - related functions - “Host community” = “HCO” - “people need international protection”=“OIP”","code":""},{"path":"/news/index.html","id":"unhcrdatapackage-014","dir":"Changelog","previous_headings":"","what":"unhcrdatapackage 0.1.4","title":"unhcrdatapackage 0.1.4","text":"Update dataset end-year 2021 data release (16 June 2022) Small revision country office mapping within reference Now using Fusen package mainstream documentation unit testing - see dev folder find plots changed vignette functions added Rmd Template create fly Statistical Fact-sheet","code":""},{"path":"/news/index.html","id":"unhcrdatapackage-013","dir":"Changelog","previous_headings":"","what":"unhcrdatapackage 0.1.3","title":"unhcrdatapackage 0.1.3","text":"Update dataset mid-year data release (11 Nov 2021) Re-organised Chart Library","code":""},{"path":"/news/index.html","id":"unhcrdatapackage-012","dir":"Changelog","previous_headings":"","what":"unhcrdatapackage 0.1.2","title":"unhcrdatapackage 0.1.2","text":"Update dataset corrected add vignettes - using unhcRstyle package","code":""},{"path":"/news/index.html","id":"unhcrdatapackage-011","dir":"Changelog","previous_headings":"","what":"unhcrdatapackage 0.1.1","title":"unhcrdatapackage 0.1.1","text":"initial version","code":""}]
